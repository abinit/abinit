******************************************************************************************
                                Welcome to MULTIBINIT,                         
 a software platform designed for the construction and use of second-principles models
                   for lattice, spin and electron degrees of freedom.

.Version 9.8.2 of MULTIBINIT 
.(MPI version, prepared for a x86_64_linux_gnu12.2 computer) 

.Copyright (C) 1998-2024 ABINIT group . 
 MULTIBINIT comes with ABSOLUTELY NO WARRANTY.
 It is free software, and you are welcome to redistribute it
 under certain conditions (GNU General Public License,
 see ~abinit/COPYING or http://www.gnu.org/copyleft/gpl.txt).

 MULTIBINIT is a software project of the University of Liege
 (PHYTHEMA & NANOMAT groups), in collaboration with other partners.

-----------------------------------------------------------------------------------------

                          MULTIBINIT - LATTICE MODELS                   

 Project initiated and coordinated by Philippe GHOSEZ and his group at ULiege
   (Philippe.Ghosez@uliege.be).

 Main contributors: Alexandre MARTIN, Jordan BIEDER, Michael Marcus SCHMITT,
   Louis BASTOGNE, Xu HE, Alireza SASANI, Huazhang ZHANG, Subhadeep BANDYOPADHYAY,
   Philippe GHOSEZ.

 Technical support: Xu HE (X.He@uliege.be)

*****************************************************************************************



.Starting date : Thu 19 Jan 2023.
- ( at 15h26 )
  
-  nproc =    1

================================================================================

 Read the information in the reference structure in 
-/home/hexu/cprojects/abinit_v98fix/tests/tutomultibinit/Input/tmulti_l_6_DDB
 to initialize the multibinit input

================================================================================

 -outvars_multibinit: echo values of input variables ----------------------

 Flags : 
     ifcflag         1
   prt_model         4
     strcpli        -1
 Bound the coefficients :
      bound_model  3
    bound_penalty  1.0010E+00
 bound_anhaStrain  0
 bound_SPCoupling  1
     bound_cutoff  0.00000000E+00
       bound_cell   6  6  6
   bound_maxCoeff   4
       bound_temp  3.25000000E+02
       bound_step   1000
 bound_rangePower  6  8
 Miscellaneous information :
         asr         2
 Interatomic Force Constants Inputs :
      dipdip         1
dipdip_range         2         2         2
      ifcana         0
      ifcout   2000000
      natifc         5
       atifc         1   2   3   4   5
 Description of grid 1 :
        brav         1
       ngqpt         4         4         4
      nqshft         1
      q1shft
                     0.00000000E+00  0.00000000E+00  0.00000000E+00
 First list of wavevector (reduced coord.) :
       nph1l         1
       qph1l
                     0.00000000E+00  0.00000000E+00  0.00000000E+00    0.000E+00

================================================================================

 Read the DDB information of the reference system and perform some checks

 Real(R)+Recip(G) space primitive vectors, cartesian coordinates (Bohr,Bohr^-1):
 R(1)=  7.8411196  0.0000000  0.0000000  G(1)=  0.1275328  0.0000000  0.0000000
 R(2)=  0.0000000  7.8411196  0.0000000  G(2)=  0.0000000  0.1275328  0.0000000
 R(3)=  0.0000000  0.0000000  7.8411196  G(3)=  0.0000000  0.0000000  0.1275328
 Unit cell volume ucvol=  4.8209678E+02 bohr^3
 Angles (23,13,12)=  9.00000000E+01  9.00000000E+01  9.00000000E+01 degrees
 Now the whole DDB is in central memory

================================================================================

 Extraction of the energy of the structure (unit: Hartree)

 Energy  =       -1.343187819874E+02

================================================================================

 Dielectric Tensor and Effective Charges 


 anaddb : Zero the imaginary part of the Dynamical Matrix at Gamma,
   and impose the ASR on the effective charges 

 The violation of the charge neutrality conditions
 by the effective charges is as follows :
    atom        electric field
 displacement     direction
       1               1       -0.000507        0.000000
       1               2        0.000000        0.000000
       1               3        0.000000        0.000000
       2               1        0.000000        0.000000
       2               2       -0.000507        0.000000
       2               3        0.000000        0.000000
       3               1        0.000000        0.000000
       3               2        0.000000        0.000000
       3               3       -0.000507        0.000000

 Effective charge tensors after 
 imposition of the charge neutrality (if requested by user),
 and eventual restriction to some part :
   atom    displacement
         1         1    2.753751E+00    0.000000E+00    0.000000E+00
         1         2    0.000000E+00    2.753751E+00    0.000000E+00
         1         3    0.000000E+00    0.000000E+00    2.753751E+00
         2         1    5.816047E+00    0.000000E+00    0.000000E+00
         2         2    0.000000E+00    5.816047E+00    0.000000E+00
         2         3    0.000000E+00    0.000000E+00    5.816047E+00
         3         1   -2.019049E+00    0.000000E+00    0.000000E+00
         3         2    0.000000E+00   -4.531700E+00    0.000000E+00
         3         3    0.000000E+00    0.000000E+00   -2.019049E+00
         4         1   -4.531700E+00    0.000000E+00    0.000000E+00
         4         2    0.000000E+00   -2.019049E+00    0.000000E+00
         4         3    0.000000E+00    0.000000E+00   -2.019049E+00
         5         1   -2.019049E+00    0.000000E+00    0.000000E+00
         5         2    0.000000E+00   -2.019049E+00    0.000000E+00
         5         3    0.000000E+00    0.000000E+00   -4.531700E+00
 Now, the imaginary part of the dynamical matrix is zeroed

================================================================================

 Extraction of the stress tensor (unit: GPa) and forces (unit: Ha/bohr)

 Cartesian components of forces (hartree/bohr)

   1     0.00000000E+00  0.00000000E+00  0.00000000E+00
   2     0.00000000E+00  0.00000000E+00  0.00000000E+00
   3     0.00000000E+00  0.00000000E+00  0.00000000E+00
   4     0.00000000E+00  0.00000000E+00  0.00000000E+00
   5     0.00000000E+00  0.00000000E+00  0.00000000E+00

 Cartesian components of stress tensor (hartree/bohr^3)
  sigma(1 1)=  2.23642476E-11  sigma(3 2)=  0.00000000E+00
  sigma(2 2)=  2.23642563E-11  sigma(3 1)=  0.00000000E+00
  sigma(3 3)=  2.23642563E-11  sigma(2 1)=  0.00000000E+00


================================================================================

 Extraction of the clamped elastic tensor (unit:10^2GPa)

   3.4403978   0.8535133   0.8535134   0.0000000   0.0000001   0.0000004
   0.8535133   3.4403977   0.8535134   0.0000001   0.0000000   0.0000004
   0.8535133   0.8535133   3.4403975   0.0000001   0.0000001  -0.0000004
  -0.0000000   0.0000000   0.0000000   0.9606190   0.0000000   0.0000000
   0.0000000  -0.0000000   0.0000000   0.0000000   0.9606190   0.0000000
   0.0000000   0.0000000  -0.0000000   0.0000000   0.0000000   0.9606190

================================================================================

 Calculation of acoustic sum rule


================================================================================

 Calculation of the interatomic forces from DDB

       Homogeneous q point set in the B.Z.
 Grid q points  :       64
  1)   0.00000000E+00  0.00000000E+00  0.00000000E+00
  2)   2.50000000E-01  0.00000000E+00  0.00000000E+00
  3)   5.00000000E-01  0.00000000E+00  0.00000000E+00
  4)  -2.50000000E-01  0.00000000E+00  0.00000000E+00
  5)   0.00000000E+00  2.50000000E-01  0.00000000E+00
  6)   2.50000000E-01  2.50000000E-01  0.00000000E+00
  7)   5.00000000E-01  2.50000000E-01  0.00000000E+00
  8)  -2.50000000E-01  2.50000000E-01  0.00000000E+00
  9)   0.00000000E+00  5.00000000E-01  0.00000000E+00
 10)   2.50000000E-01  5.00000000E-01  0.00000000E+00
 11)   5.00000000E-01  5.00000000E-01  0.00000000E+00
 12)  -2.50000000E-01  5.00000000E-01  0.00000000E+00
 13)   0.00000000E+00 -2.50000000E-01  0.00000000E+00
 14)   2.50000000E-01 -2.50000000E-01  0.00000000E+00
 15)   5.00000000E-01 -2.50000000E-01  0.00000000E+00
 16)  -2.50000000E-01 -2.50000000E-01  0.00000000E+00
 17)   0.00000000E+00  0.00000000E+00  2.50000000E-01
 18)   2.50000000E-01  0.00000000E+00  2.50000000E-01
 19)   5.00000000E-01  0.00000000E+00  2.50000000E-01
 20)  -2.50000000E-01  0.00000000E+00  2.50000000E-01
 21)   0.00000000E+00  2.50000000E-01  2.50000000E-01
 22)   2.50000000E-01  2.50000000E-01  2.50000000E-01
 23)   5.00000000E-01  2.50000000E-01  2.50000000E-01
 24)  -2.50000000E-01  2.50000000E-01  2.50000000E-01
 25)   0.00000000E+00  5.00000000E-01  2.50000000E-01
 26)   2.50000000E-01  5.00000000E-01  2.50000000E-01
 27)   5.00000000E-01  5.00000000E-01  2.50000000E-01
 28)  -2.50000000E-01  5.00000000E-01  2.50000000E-01
 29)   0.00000000E+00 -2.50000000E-01  2.50000000E-01
 30)   2.50000000E-01 -2.50000000E-01  2.50000000E-01
 31)   5.00000000E-01 -2.50000000E-01  2.50000000E-01
 32)  -2.50000000E-01 -2.50000000E-01  2.50000000E-01
 33)   0.00000000E+00  0.00000000E+00  5.00000000E-01
 34)   2.50000000E-01  0.00000000E+00  5.00000000E-01
 35)   5.00000000E-01  0.00000000E+00  5.00000000E-01
 36)  -2.50000000E-01  0.00000000E+00  5.00000000E-01
 37)   0.00000000E+00  2.50000000E-01  5.00000000E-01
 38)   2.50000000E-01  2.50000000E-01  5.00000000E-01
 39)   5.00000000E-01  2.50000000E-01  5.00000000E-01
 40)  -2.50000000E-01  2.50000000E-01  5.00000000E-01
 41)   0.00000000E+00  5.00000000E-01  5.00000000E-01
 42)   2.50000000E-01  5.00000000E-01  5.00000000E-01
 43)   5.00000000E-01  5.00000000E-01  5.00000000E-01
 44)  -2.50000000E-01  5.00000000E-01  5.00000000E-01
 45)   0.00000000E+00 -2.50000000E-01  5.00000000E-01
 46)   2.50000000E-01 -2.50000000E-01  5.00000000E-01
 47)   5.00000000E-01 -2.50000000E-01  5.00000000E-01
 48)  -2.50000000E-01 -2.50000000E-01  5.00000000E-01
 49)   0.00000000E+00  0.00000000E+00 -2.50000000E-01
 50)   2.50000000E-01  0.00000000E+00 -2.50000000E-01
 51)   5.00000000E-01  0.00000000E+00 -2.50000000E-01
 52)  -2.50000000E-01  0.00000000E+00 -2.50000000E-01
 53)   0.00000000E+00  2.50000000E-01 -2.50000000E-01
 54)   2.50000000E-01  2.50000000E-01 -2.50000000E-01
 55)   5.00000000E-01  2.50000000E-01 -2.50000000E-01
 56)  -2.50000000E-01  2.50000000E-01 -2.50000000E-01
 57)   0.00000000E+00  5.00000000E-01 -2.50000000E-01
 58)   2.50000000E-01  5.00000000E-01 -2.50000000E-01
 59)   5.00000000E-01  5.00000000E-01 -2.50000000E-01
 60)  -2.50000000E-01  5.00000000E-01 -2.50000000E-01
 61)   0.00000000E+00 -2.50000000E-01 -2.50000000E-01
 62)   2.50000000E-01 -2.50000000E-01 -2.50000000E-01
 63)   5.00000000E-01 -2.50000000E-01 -2.50000000E-01
 64)  -2.50000000E-01 -2.50000000E-01 -2.50000000E-01

 The interatomic forces have been obtained

================================================================================

 Calculation of dynamical matrix for each ph1l points

  Phonon at Gamma, with non-analyticity in the
  direction (cartesian coordinates)  0.00000  0.00000  0.00000
 Phonon energies in Hartree :
   0.000000E+00  0.000000E+00  0.000000E+00  4.855216E-04  4.855216E-04
   4.855216E-04  8.565574E-04  8.565574E-04  8.565574E-04  9.382818E-04
   9.382818E-04  9.382818E-04  2.363951E-03  2.363951E-03  2.363951E-03
 Phonon frequencies in cm-1    :
-  0.000000E+00  0.000000E+00  0.000000E+00  1.065597E+02  1.065597E+02
-  1.065597E+02  1.879926E+02  1.879926E+02  1.879926E+02  2.059290E+02
-  2.059290E+02  2.059290E+02  5.188273E+02  5.188273E+02  5.188273E+02

================================================================================

 Calculation of the internal-strain  tensor

 Force-response internal strain tensor(Unit:Hartree/bohr)

 Atom dir   strainxx    strainyy    strainzz    strainyz    strainxz    strainxy
  1  x    -0.0000000   0.0000000   0.0000000  -0.0000000   0.0000000  -0.0000000
  1  y     0.0000000  -0.0000000   0.0000000  -0.0000000  -0.0000000  -0.0000000
  1  z     0.0000000   0.0000000   0.0000000  -0.0000000  -0.0000000  -0.0000000
  2  x     0.0000000  -0.0000000  -0.0000000  -0.0000000   0.0000000   0.0000000
  2  y     0.0000000   0.0000000  -0.0000000   0.0000000   0.0000000   0.0000000
  2  z    -0.0000000  -0.0000000   0.0000000   0.0000000   0.0000000  -0.0000000
  3  x    -0.0000000  -0.0000000  -0.0000000   0.0000000   0.0000000  -0.0000000
  3  y     0.0000000  -0.0000000   0.0000000   0.0000000   0.0000000   0.0000000
  3  z     0.0000000  -0.0000000  -0.0000000  -0.0000000   0.0000000   0.0000000
  4  x    -0.0000000   0.0000000   0.0000000   0.0000000   0.0000000   0.0000000
  4  y    -0.0000000  -0.0000000  -0.0000000   0.0000000   0.0000000  -0.0000000
  4  z    -0.0000000  -0.0000000  -0.0000000   0.0000000  -0.0000000   0.0000000
  5  x    -0.0000000  -0.0000000  -0.0000000   0.0000000  -0.0000000   0.0000000
  5  y    -0.0000000  -0.0000000  -0.0000000  -0.0000000   0.0000000   0.0000000
  5  z    -0.0000000   0.0000000  -0.0000000   0.0000000   0.0000000   0.0000000



 Bound for ifc SR:

 x=[ -2  2], y=[ -2  2] and z=[ -2  2]

================================================================================
 Generation of new ifc

 dipdip is set to one, the dipole-dipole interation is recompute.

 Bound for ifc (LR):

 x=[  0  1], y=[  0  1] and z=[  0  1]

 Computation of new dipole-dipole interaction.

 Impose acoustic sum rule on total ifc

================================================================================

 Read the coefficients of the polynomial fit from XML and perform some checks

-Opening the file /home/hexu/cprojects/abinit_v98fix/tests/tutomultibinit/Input/tmulti_l_7_1_coeffs.xml
-Reading the file /home/hexu/cprojects/abinit_v98fix/tests/tutomultibinit/Input/tmulti_l_7_1_coeffs.xml with LibXML library

================================================================================

-Reading the training-set file :
-/home/hexu/cprojects/abinit_v98fix/tests/tutomultibinit/Input/tmulti_l_6_HIST.nc


================================================================================

Bound Process 3: Generate equivalent high order terms

-Start Bound optimization of Anharmonic Potential 


 Mean Standard Deviation values of the effective-potential
 with respect to the training-set before attempted bounding (meV^2/atm):
   Energy          :   1.2246810296030139E+00
 Goal function values of the effective.potential
 with respect to the test-set (eV^2/A^2):
   Forces+Stresses :   1.1685294481702692E-02
   Forces          :   9.1861216904104617E-03
   Stresses        :   2.4991727912922310E-03


________________________________________________________________________________


 Check term (  1/ 12): (Hf_y-O1_y)^2(eta_2)^1


- Term has strain compenent
 -> Filter Displacement


 ==> high order term: (Hf_y-O1_y)^6 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_y-O1_y)^8 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_y-O1_y)^4(eta_2)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_y-O1_y)^2(eta_2)^4 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_y-O1_y)^6(eta_2)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_y-O1_y)^2(eta_2)^6 created


   ==> Optimizing coefficient


________________________________________________________________________________


 Check term (  2/ 12): (Hf_x-O1_x)^2(Hf_z-O1_z)^1(Hf_y-O3_y)^1


 ==> high order term: (Hf_x-O1_x)^6 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^8 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_z-O1_z)^2(Hf_y-O3_y)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^4(Hf_z-O1_z)^2(Hf_y-O3_y)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_z-O1_z)^4(Hf_y-O3_y)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_z-O1_z)^2(Hf_y-O3_y)^4 created


   ==> Optimizing coefficient


________________________________________________________________________________


 Check term (  3/ 12): (Hf_y-O1_y)^2(Hf_y-O1_y[0 1 0])^1


 ==> high order term: (Hf_y-O1_y)^4(Hf_y-O1_y[0 1 0])^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_y-O1_y)^6(Hf_y-O1_y[0 1 0])^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_y-O1_y)^4(Hf_y-O1_y[0 1 0])^4 created


   ==> Optimizing coefficient


________________________________________________________________________________


 Check term (  4/ 12): (Hf_x-O1_x)^1(Hf_y-O2_y)^1(eta_1)^1


- Term has strain compenent
 -> Filter Displacement


 ==> high order term: (Hf_x-O1_x)^4(Hf_y-O2_y)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^6(Hf_y-O2_y)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^4(Hf_y-O2_y)^4 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_y-O2_y)^2(eta_1)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^4(Hf_y-O2_y)^2(eta_1)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_y-O2_y)^4(eta_1)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_y-O2_y)^2(eta_1)^4 created


   ==> Optimizing coefficient


________________________________________________________________________________


 Check term (  5/ 12): (Hf_x-O1_x)^2(eta_3)^1


- Term has strain compenent
 -> Filter Displacement


 ==> high order term: (Hf_x-O1_x)^4(eta_3)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(eta_3)^4 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^6(eta_3)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(eta_3)^6 created


   ==> Optimizing coefficient


________________________________________________________________________________


 Check term (  6/ 12): (Hf_x-O1_x)^4


 ==> No need for high order bounding term


________________________________________________________________________________


 Check term (  7/ 12): (Hf_x-O1_x)^2(Hf_y-O1_y)^2


 ==> high order term: (Hf_x-O1_x)^4(Hf_y-O1_y)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_y-O1_y)^4 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^6(Hf_y-O1_y)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_y-O1_y)^6 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^4(Hf_y-O1_y)^4 created


   ==> Optimizing coefficient


________________________________________________________________________________


 Check term (  8/ 12): (Hf_x-O1_x)^2(Hf_z-O3_z)^1


 ==> high order term: (Hf_x-O1_x)^4(Hf_z-O3_z)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_z-O3_z)^4 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^6(Hf_z-O3_z)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_z-O3_z)^6 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^4(Hf_z-O3_z)^4 created


   ==> Optimizing coefficient


________________________________________________________________________________


 Check term (  9/ 12): (Hf_x-O1_x)^1(Hf_z-O2_z)^1(eta_4)^1


- Term has strain compenent
 -> Filter Displacement


 ==> high order term: (Hf_x-O1_x)^4(Hf_z-O2_z)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_z-O2_z)^4 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^6(Hf_z-O2_z)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_z-O2_z)^6 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^4(Hf_z-O2_z)^4 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_z-O2_z)^2(eta_4)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^4(Hf_z-O2_z)^2(eta_4)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_z-O2_z)^4(eta_4)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_z-O2_z)^2(eta_4)^4 created


   ==> Optimizing coefficient


________________________________________________________________________________


 Check term ( 10/ 12): (Hf_y-O1_y)^3(Hf_y-O1_y[0 1 0])^1


________________________________________________________________________________


 Check term ( 11/ 12): (Hf_y-O1_y)^2(eta_1)^1


- Term has strain compenent
 -> Filter Displacement


 ==> high order term: (Hf_y-O1_y)^4(eta_1)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_y-O1_y)^2(eta_1)^4 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_y-O1_y)^6(eta_1)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_y-O1_y)^2(eta_1)^6 created


   ==> Optimizing coefficient


________________________________________________________________________________


 Check term ( 12/ 12): (Hf_x-O1_x)^1(Hf_x-O2_x)^1(Hf_y-O2_y)^1


 ==> high order term: (Hf_x-O1_x)^2(Hf_x-O2_x)^2(Hf_y-O2_y)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^4(Hf_x-O2_x)^2(Hf_y-O2_y)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_x-O2_x)^4(Hf_y-O2_y)^2 created


   ==> Optimizing coefficient


 ==> high order term: (Hf_x-O1_x)^2(Hf_x-O2_x)^2(Hf_y-O2_y)^4 created


   ==> Optimizing coefficient


________________________________________________________________________________


 Chreate high order strain terms 


 ==> high order term: (eta_1)^6 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^8 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^6(eta_2)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^6(eta_4)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^6(eta_5)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^4(eta_2)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^4(eta_2)^4 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^4(eta_2)^2(eta_3)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^4(eta_2)^2(eta_4)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^4(eta_2)^2(eta_5)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^4(eta_2)^2(eta_6)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^4(eta_4)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^4(eta_4)^4 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^4(eta_4)^2(eta_5)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^4(eta_5)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^4(eta_5)^4 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^4(eta_5)^2(eta_6)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_2)^2(eta_3)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_2)^2(eta_3)^2(eta_4)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_2)^2(eta_4)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_2)^2(eta_4)^4 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_2)^2(eta_4)^2(eta_5)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_2)^2(eta_4)^2(eta_6)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_2)^2(eta_6)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_2)^2(eta_6)^4 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_4)^4 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_4)^6 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_4)^4(eta_5)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_4)^2(eta_5)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_4)^2(eta_5)^4 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_4)^2(eta_5)^2(eta_6)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_5)^4 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_5)^6 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_5)^4(eta_6)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_1)^2(eta_5)^2(eta_6)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_4)^6 created


   ==> Optimizing coefficient


 ==> high order term: (eta_4)^8 created


   ==> Optimizing coefficient


 ==> high order term: (eta_4)^6(eta_5)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_4)^4(eta_5)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_4)^4(eta_5)^4 created


   ==> Optimizing coefficient


 ==> high order term: (eta_4)^4(eta_5)^2(eta_6)^2 created


   ==> Optimizing coefficient


 ==> high order term: (eta_4)^2(eta_5)^2(eta_6)^2 created


   ==> Optimizing coefficient


________________________________________________________________________________


 Finished creating high-order terms


 Mean Standard Deviation values of the effective-potential
 with respect to the training-set after attempted bounding (meV^2/atm):
   Energy          :   7.9427908583943863E-01
 Goal function values of the effective.potential
 with respect to the test-set (eV^2/A^2):
   Forces+Stresses :   1.2171215639897441E-02
   Forces          :   9.6006531339869021E-03
   Stresses        :   2.5705625059105389E-03


================================================================================

 Generation of the xml file for the fitted polynomial in tmulti_l_7_1_coeffs.xml

================================================================================

-
- Proc.   0 individual time (sec): cpu=        202.3  wall=        202.6

================================================================================

+Total cpu time    202.260  and wall time    202.649 sec

 multibinit : the run completed succesfully.
- [ALL OK] MEMORY CONSUMPTION REPORT FOR C CODE:
-   There were 0 allocations and 0 deallocations in C code
- [ALL OK] MEMORY CONSUMPTION REPORT FOR FORTRAN CODE:
-   There were 1642906 allocations and 1642906 deallocations in Fortran
-   Remaining memory at the end of the calculation is 0
