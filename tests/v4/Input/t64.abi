# Al normal fcc structure for test of metal strain perturbation

 ndtset   2

# Set 1 : initial self-consistency

kptopt1   1
tolvrs1   1.0d-18

# Set 2 : response-function strain calculation

getwfk2   -1
kptopt2   2
  nqpt2   1
   qpt2   0  0  0
 rfdir2   1  0  0
rfstrs2   3
tolvrs2   1.0d-12

# common input data

  acell   3*7.60
   ecut   6.0
 ecutsm   0.0
  natom   1
  nband   8
  ngkpt   2 2 2
nshiftk   4
  nstep   50
 ntypat   1
 occopt   3
 prtvol   10
  rprim   0.0  0.5  0.5
          0.5  0.0  0.5
          0.5  0.5  0.0
 shiftk   0.0 0.0 0.5
          0.0 0.5 0.0
          0.5 0.0 0.0
          0.5 0.5 0.5
 tsmear   0.04
  typat   1
   xred   0.0  0.0  0.0
 znucl    13

 pp_dirpath "$ABI_PSPDIR"
 pseudos "PseudosGTH_pwteter/13al.pspgth"

#%%<BEGIN TEST_INFO>
#%% [setup]
#%% executable = abinit
#%% [files]
#%% files_to_test = 
#%%   t64.abo, tolnlines = 3, tolabs = 1.100e-09, tolrel = 5.0e-04
#%% [paral_info]
#%% max_nprocs = 2
#%% [extra_info]
#%% authors = D. R. Hamann
#%% keywords = NC, DFPT
#%% description = 
#%%   Test of the strain perturbation for metals.
#%%   Al in the standard fcc structure using the gth potential.
#%%   An issue with metals is that the fermi energy has a non-zero
#%%   derivative wrt at least some of the strain perturbations.
#%%   Modifications of the "active space" content restored to the
#%%   first-order wavefunction (in vtowfk3.f) were implemented to
#%%   reflect the resulting strain contributions.  The fermi energy
#%%   derivative (itself a 1st-order quantity) depends on the self-
#%%   consistent first-order potential, and thus plays a role in the
#%%   response-function self-consistency loop. As of 4.4.x, a new
#%%   treatment of the first-order fermi energy significantly improves
#%%   the rate of convergence and allows all self-consistency algorithms.
#%%   The results here are in very good agreement with numerical derivatives
#%%   of ground state calculations with the same input parameters.  However,
#%%   the kpt sample is far from converged and completely inadequate for
#%%   real calculations.
#%%<END TEST_INFO>
