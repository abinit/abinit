#! /bin/bash
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/bash}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
as_nop=:
if test ${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else $as_nop
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi



# Reset variables that may have inherited troublesome values from
# the environment.

# IFS needs to be set, to space, tab, and newline, in precisely that order.
# (If _AS_PATH_WALK were called with IFS unset, it would have the
# side effect of setting IFS to empty, thus disabling word splitting.)
# Quoting is to prevent editors from complaining about space-tab.
as_nl='
'
export as_nl
IFS=" ""	$as_nl"

PS1='$ '
PS2='> '
PS4='+ '

# Ensure predictable behavior from utilities with locale-dependent output.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# We cannot yet rely on "unset" to work, but we need these variables
# to be unset--not just set to an empty or harmless value--now, to
# avoid bugs in old shells (e.g. pre-3.0 UWIN ksh).  This construct
# also avoids known problems related to "unset" and subshell syntax
# in other old shells (e.g. bash 2.01 and pdksh 5.2.14).
for as_var in BASH_ENV ENV MAIL MAILPATH CDPATH
do eval test \${$as_var+y} \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done

# Ensure that fds 0, 1, and 2 are open.
if (exec 3>&0) 2>/dev/null; then :; else exec 0</dev/null; fi
if (exec 3>&1) 2>/dev/null; then :; else exec 1>/dev/null; fi
if (exec 3>&2)            ; then :; else exec 2>/dev/null; fi

# The user is always right.
if ${PATH_SEPARATOR+false} :; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    test -r "$as_dir$0" && as_myself=$as_dir$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  printf "%s\n" "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi



# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  printf "%s\n" "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error



# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null
then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else $as_nop
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null
then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else $as_nop
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


# Determine whether it's possible to make 'echo' print without a newline.
# These variables are no longer used directly by Autoconf, but are AC_SUBSTed
# for compatibility with existing Makefiles.
ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

# For backward compatibility with old third-party macros, we provide
# the shell variables $as_echo and $as_echo_n.  New code should use
# AS_ECHO(["message"]) and AS_ECHO_N(["message"]), respectively.
as_echo='printf %s\n'
as_echo_n='printf %s'

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`printf "%s\n" "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by ABINIT $as_me 9.9.0, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" fallbacks/INSTALL fallbacks/README fallbacks/build-abinit-fallbacks.sh config.dump config.pc config.sh config/split/make-src-symlinks config/wrappers/wrap-fc abichecks/abichecks.env shared/common/src/14_hidewrite/m_build_info.F90 Makefile abichecks/Makefile shared/Makefile shared/common/Makefile shared/common/src/Makefile shared/common/src/incs/Makefile shared/common/src/mods/Makefile shared/libpaw/Makefile shared/libpaw/incs/Makefile shared/libpaw/mods/Makefile src/Makefile src/incs/Makefile src/mods/Makefile doc/Makefile tests/Makefile shared/common/src/02_clib/Makefile shared/common/src/10_defs/Makefile shared/common/src/11_memory_mpi/Makefile shared/common/src/12_hide_mpi/Makefile shared/common/src/14_hidewrite/Makefile shared/common/src/16_hideleave/Makefile shared/common/src/17_gpu_toolbox/Makefile shared/common/src/17_libtetra_ext/Makefile shared/common/src/17_yaml_out/Makefile shared/common/src/18_timing/Makefile shared/common/src/21_hashfuncs/Makefile shared/common/src/27_toolbox_oop/Makefile shared/common/src/28_numeric_noabirule/Makefile shared/common/src/29_kpoints/Makefile shared/common/src/32_util/Makefile shared/common/src/33_xc_lowlevel/Makefile shared/libpaw/src/Makefile src/41_geometry/Makefile src/42_nlstrain/Makefile src/42_parser/Makefile src/43_ptgroups/Makefile src/43_wvl_wrappers/Makefile src/44_abitools/Makefile src/44_abitypes_defs/Makefile src/45_geomoptim/Makefile src/45_xgTools/Makefile src/46_manage_cuda/Makefile src/48_diago/Makefile src/49_gw_toolbox_oop/Makefile src/51_manage_mpi/Makefile src/52_fft_mpi_noabirule/Makefile src/53_ffts/Makefile src/54_spacepar/Makefile src/55_abiutil/Makefile src/56_io_mpi/Makefile src/56_mixing/Makefile src/56_recipspace/Makefile src/56_xc/Makefile src/57_iopsp_parser/Makefile src/57_iovars/Makefile src/61_occeig/Makefile src/62_cg_noabirule/Makefile src/62_ctqmc/Makefile src/62_iowfdenpot/Makefile src/62_poisson/Makefile src/62_wvl_wfs/Makefile src/64_psp/Makefile src/65_lotf_base/Makefile src/65_paw/Makefile src/66_nonlocal/Makefile src/66_vdwxc/Makefile src/66_wfs/Makefile src/67_common/Makefile src/67_python_invocation_ext/Makefile src/67_triqs_ext/Makefile src/68_dmft/Makefile src/68_lotf/Makefile src/68_recursion/Makefile src/68_rsprc/Makefile src/69_wfdesc/Makefile src/70_gw/Makefile src/71_bse/Makefile src/71_wannier/Makefile src/72_response/Makefile src/77_ddb/Makefile src/77_suscep/Makefile src/78_effpot/Makefile src/78_eph/Makefile src/79_seqpar_mpi/Makefile src/80_rttddft/Makefile src/80_tdep/Makefile src/94_scfcv/Makefile src/95_drive/Makefile src/98_main/Makefile"
config_headers=" config.h"
config_commands=" depfiles default dump-optim long-lines script-perms source-split"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to <https://bugs.launchpad.net/abinit/>."

ac_cs_config=''
ac_cs_version="\
ABINIT config.status 9.9.0
configured by ../configure, generated by GNU Autoconf 2.71,
  with options \"$ac_cs_config\"

Copyright (C) 2021 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/home/vtrinquet/Softwares_Packages/abinit/build_test'
srcdir='..'
INSTALL='/usr/bin/install -c'
MKDIR_P='/usr/bin/mkdir -p'
AWK='mawk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    printf "%s\n" "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    printf "%s\n" "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`printf "%s\n" "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`printf "%s\n" "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    printf "%s\n" "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X /bin/bash '../configure'  $ac_configure_extra_args --no-create --no-recursion
  shift
  \printf "%s\n" "running CONFIG_SHELL=/bin/bash $*" >&6
  CONFIG_SHELL='/bin/bash'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  printf "%s\n" "$ac_log"
} >&5

#
# INIT-COMMANDS
#
AMDEP_TRUE="" MAKE="make"


# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "config.h") CONFIG_HEADERS="$CONFIG_HEADERS config.h" ;;
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "fallbacks/INSTALL") CONFIG_FILES="$CONFIG_FILES fallbacks/INSTALL" ;;
    "fallbacks/README") CONFIG_FILES="$CONFIG_FILES fallbacks/README" ;;
    "fallbacks/build-abinit-fallbacks.sh") CONFIG_FILES="$CONFIG_FILES fallbacks/build-abinit-fallbacks.sh" ;;
    "default") CONFIG_COMMANDS="$CONFIG_COMMANDS default" ;;
    "config.dump") CONFIG_FILES="$CONFIG_FILES config.dump" ;;
    "config.pc") CONFIG_FILES="$CONFIG_FILES config.pc" ;;
    "config.sh") CONFIG_FILES="$CONFIG_FILES config.sh" ;;
    "config/split/make-src-symlinks") CONFIG_FILES="$CONFIG_FILES config/split/make-src-symlinks" ;;
    "config/wrappers/wrap-fc") CONFIG_FILES="$CONFIG_FILES config/wrappers/wrap-fc" ;;
    "abichecks/abichecks.env") CONFIG_FILES="$CONFIG_FILES abichecks/abichecks.env" ;;
    "shared/common/src/14_hidewrite/m_build_info.F90") CONFIG_FILES="$CONFIG_FILES shared/common/src/14_hidewrite/m_build_info.F90" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "abichecks/Makefile") CONFIG_FILES="$CONFIG_FILES abichecks/Makefile" ;;
    "shared/Makefile") CONFIG_FILES="$CONFIG_FILES shared/Makefile" ;;
    "shared/common/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/Makefile" ;;
    "shared/common/src/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/Makefile" ;;
    "shared/common/src/incs/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/incs/Makefile" ;;
    "shared/common/src/mods/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/mods/Makefile" ;;
    "shared/libpaw/Makefile") CONFIG_FILES="$CONFIG_FILES shared/libpaw/Makefile" ;;
    "shared/libpaw/incs/Makefile") CONFIG_FILES="$CONFIG_FILES shared/libpaw/incs/Makefile" ;;
    "shared/libpaw/mods/Makefile") CONFIG_FILES="$CONFIG_FILES shared/libpaw/mods/Makefile" ;;
    "src/Makefile") CONFIG_FILES="$CONFIG_FILES src/Makefile" ;;
    "src/incs/Makefile") CONFIG_FILES="$CONFIG_FILES src/incs/Makefile" ;;
    "src/mods/Makefile") CONFIG_FILES="$CONFIG_FILES src/mods/Makefile" ;;
    "doc/Makefile") CONFIG_FILES="$CONFIG_FILES doc/Makefile" ;;
    "tests/Makefile") CONFIG_FILES="$CONFIG_FILES tests/Makefile" ;;
    "shared/common/src/02_clib/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/02_clib/Makefile" ;;
    "shared/common/src/10_defs/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/10_defs/Makefile" ;;
    "shared/common/src/11_memory_mpi/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/11_memory_mpi/Makefile" ;;
    "shared/common/src/12_hide_mpi/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/12_hide_mpi/Makefile" ;;
    "shared/common/src/14_hidewrite/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/14_hidewrite/Makefile" ;;
    "shared/common/src/16_hideleave/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/16_hideleave/Makefile" ;;
    "shared/common/src/17_gpu_toolbox/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/17_gpu_toolbox/Makefile" ;;
    "shared/common/src/17_libtetra_ext/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/17_libtetra_ext/Makefile" ;;
    "shared/common/src/17_yaml_out/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/17_yaml_out/Makefile" ;;
    "shared/common/src/18_timing/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/18_timing/Makefile" ;;
    "shared/common/src/21_hashfuncs/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/21_hashfuncs/Makefile" ;;
    "shared/common/src/27_toolbox_oop/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/27_toolbox_oop/Makefile" ;;
    "shared/common/src/28_numeric_noabirule/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/28_numeric_noabirule/Makefile" ;;
    "shared/common/src/29_kpoints/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/29_kpoints/Makefile" ;;
    "shared/common/src/32_util/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/32_util/Makefile" ;;
    "shared/common/src/33_xc_lowlevel/Makefile") CONFIG_FILES="$CONFIG_FILES shared/common/src/33_xc_lowlevel/Makefile" ;;
    "shared/libpaw/src/Makefile") CONFIG_FILES="$CONFIG_FILES shared/libpaw/src/Makefile" ;;
    "src/41_geometry/Makefile") CONFIG_FILES="$CONFIG_FILES src/41_geometry/Makefile" ;;
    "src/42_nlstrain/Makefile") CONFIG_FILES="$CONFIG_FILES src/42_nlstrain/Makefile" ;;
    "src/42_parser/Makefile") CONFIG_FILES="$CONFIG_FILES src/42_parser/Makefile" ;;
    "src/43_ptgroups/Makefile") CONFIG_FILES="$CONFIG_FILES src/43_ptgroups/Makefile" ;;
    "src/43_wvl_wrappers/Makefile") CONFIG_FILES="$CONFIG_FILES src/43_wvl_wrappers/Makefile" ;;
    "src/44_abitools/Makefile") CONFIG_FILES="$CONFIG_FILES src/44_abitools/Makefile" ;;
    "src/44_abitypes_defs/Makefile") CONFIG_FILES="$CONFIG_FILES src/44_abitypes_defs/Makefile" ;;
    "src/45_geomoptim/Makefile") CONFIG_FILES="$CONFIG_FILES src/45_geomoptim/Makefile" ;;
    "src/45_xgTools/Makefile") CONFIG_FILES="$CONFIG_FILES src/45_xgTools/Makefile" ;;
    "src/46_manage_cuda/Makefile") CONFIG_FILES="$CONFIG_FILES src/46_manage_cuda/Makefile" ;;
    "src/48_diago/Makefile") CONFIG_FILES="$CONFIG_FILES src/48_diago/Makefile" ;;
    "src/49_gw_toolbox_oop/Makefile") CONFIG_FILES="$CONFIG_FILES src/49_gw_toolbox_oop/Makefile" ;;
    "src/51_manage_mpi/Makefile") CONFIG_FILES="$CONFIG_FILES src/51_manage_mpi/Makefile" ;;
    "src/52_fft_mpi_noabirule/Makefile") CONFIG_FILES="$CONFIG_FILES src/52_fft_mpi_noabirule/Makefile" ;;
    "src/53_ffts/Makefile") CONFIG_FILES="$CONFIG_FILES src/53_ffts/Makefile" ;;
    "src/54_spacepar/Makefile") CONFIG_FILES="$CONFIG_FILES src/54_spacepar/Makefile" ;;
    "src/55_abiutil/Makefile") CONFIG_FILES="$CONFIG_FILES src/55_abiutil/Makefile" ;;
    "src/56_io_mpi/Makefile") CONFIG_FILES="$CONFIG_FILES src/56_io_mpi/Makefile" ;;
    "src/56_mixing/Makefile") CONFIG_FILES="$CONFIG_FILES src/56_mixing/Makefile" ;;
    "src/56_recipspace/Makefile") CONFIG_FILES="$CONFIG_FILES src/56_recipspace/Makefile" ;;
    "src/56_xc/Makefile") CONFIG_FILES="$CONFIG_FILES src/56_xc/Makefile" ;;
    "src/57_iopsp_parser/Makefile") CONFIG_FILES="$CONFIG_FILES src/57_iopsp_parser/Makefile" ;;
    "src/57_iovars/Makefile") CONFIG_FILES="$CONFIG_FILES src/57_iovars/Makefile" ;;
    "src/61_occeig/Makefile") CONFIG_FILES="$CONFIG_FILES src/61_occeig/Makefile" ;;
    "src/62_cg_noabirule/Makefile") CONFIG_FILES="$CONFIG_FILES src/62_cg_noabirule/Makefile" ;;
    "src/62_ctqmc/Makefile") CONFIG_FILES="$CONFIG_FILES src/62_ctqmc/Makefile" ;;
    "src/62_iowfdenpot/Makefile") CONFIG_FILES="$CONFIG_FILES src/62_iowfdenpot/Makefile" ;;
    "src/62_poisson/Makefile") CONFIG_FILES="$CONFIG_FILES src/62_poisson/Makefile" ;;
    "src/62_wvl_wfs/Makefile") CONFIG_FILES="$CONFIG_FILES src/62_wvl_wfs/Makefile" ;;
    "src/64_psp/Makefile") CONFIG_FILES="$CONFIG_FILES src/64_psp/Makefile" ;;
    "src/65_lotf_base/Makefile") CONFIG_FILES="$CONFIG_FILES src/65_lotf_base/Makefile" ;;
    "src/65_paw/Makefile") CONFIG_FILES="$CONFIG_FILES src/65_paw/Makefile" ;;
    "src/66_nonlocal/Makefile") CONFIG_FILES="$CONFIG_FILES src/66_nonlocal/Makefile" ;;
    "src/66_vdwxc/Makefile") CONFIG_FILES="$CONFIG_FILES src/66_vdwxc/Makefile" ;;
    "src/66_wfs/Makefile") CONFIG_FILES="$CONFIG_FILES src/66_wfs/Makefile" ;;
    "src/67_common/Makefile") CONFIG_FILES="$CONFIG_FILES src/67_common/Makefile" ;;
    "src/67_python_invocation_ext/Makefile") CONFIG_FILES="$CONFIG_FILES src/67_python_invocation_ext/Makefile" ;;
    "src/67_triqs_ext/Makefile") CONFIG_FILES="$CONFIG_FILES src/67_triqs_ext/Makefile" ;;
    "src/68_dmft/Makefile") CONFIG_FILES="$CONFIG_FILES src/68_dmft/Makefile" ;;
    "src/68_lotf/Makefile") CONFIG_FILES="$CONFIG_FILES src/68_lotf/Makefile" ;;
    "src/68_recursion/Makefile") CONFIG_FILES="$CONFIG_FILES src/68_recursion/Makefile" ;;
    "src/68_rsprc/Makefile") CONFIG_FILES="$CONFIG_FILES src/68_rsprc/Makefile" ;;
    "src/69_wfdesc/Makefile") CONFIG_FILES="$CONFIG_FILES src/69_wfdesc/Makefile" ;;
    "src/70_gw/Makefile") CONFIG_FILES="$CONFIG_FILES src/70_gw/Makefile" ;;
    "src/71_bse/Makefile") CONFIG_FILES="$CONFIG_FILES src/71_bse/Makefile" ;;
    "src/71_wannier/Makefile") CONFIG_FILES="$CONFIG_FILES src/71_wannier/Makefile" ;;
    "src/72_response/Makefile") CONFIG_FILES="$CONFIG_FILES src/72_response/Makefile" ;;
    "src/77_ddb/Makefile") CONFIG_FILES="$CONFIG_FILES src/77_ddb/Makefile" ;;
    "src/77_suscep/Makefile") CONFIG_FILES="$CONFIG_FILES src/77_suscep/Makefile" ;;
    "src/78_effpot/Makefile") CONFIG_FILES="$CONFIG_FILES src/78_effpot/Makefile" ;;
    "src/78_eph/Makefile") CONFIG_FILES="$CONFIG_FILES src/78_eph/Makefile" ;;
    "src/79_seqpar_mpi/Makefile") CONFIG_FILES="$CONFIG_FILES src/79_seqpar_mpi/Makefile" ;;
    "src/80_rttddft/Makefile") CONFIG_FILES="$CONFIG_FILES src/80_rttddft/Makefile" ;;
    "src/80_tdep/Makefile") CONFIG_FILES="$CONFIG_FILES src/80_tdep/Makefile" ;;
    "src/94_scfcv/Makefile") CONFIG_FILES="$CONFIG_FILES src/94_scfcv/Makefile" ;;
    "src/95_drive/Makefile") CONFIG_FILES="$CONFIG_FILES src/95_drive/Makefile" ;;
    "src/98_main/Makefile") CONFIG_FILES="$CONFIG_FILES src/98_main/Makefile" ;;
    "dump-optim") CONFIG_COMMANDS="$CONFIG_COMMANDS dump-optim" ;;
    "long-lines") CONFIG_COMMANDS="$CONFIG_COMMANDS long-lines" ;;
    "script-perms") CONFIG_COMMANDS="$CONFIG_COMMANDS script-perms" ;;
    "source-split") CONFIG_COMMANDS="$CONFIG_COMMANDS source-split" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test ${CONFIG_FILES+y} || CONFIG_FILES=$config_files
  test ${CONFIG_HEADERS+y} || CONFIG_HEADERS=$config_headers
  test ${CONFIG_COMMANDS+y} || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
S["FFLAGS"]="-g -ffree-line-length-none -fallow-argument-mismatch      "
S["F77"]="mpifort"
S["FC_NOWRAP"]="mpifort"
S["DO_BUILD_67_PYTHON_INVOCATION_EXT_FALSE"]=""
S["DO_BUILD_67_PYTHON_INVOCATION_EXT_TRUE"]="#"
S["DO_BUILD_68_LOTF_FALSE"]=""
S["DO_BUILD_68_LOTF_TRUE"]="#"
S["DO_BUILD_65_LOTF_BASE_FALSE"]=""
S["DO_BUILD_65_LOTF_BASE_TRUE"]="#"
S["DO_BUILD_EXPORTS_FALSE"]=""
S["DO_BUILD_EXPORTS_TRUE"]="#"
S["am__EXEEXT_FALSE"]=""
S["am__EXEEXT_TRUE"]="#"
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["DO_BUILD_SHARED_LIBPAW_FALSE"]="#"
S["DO_BUILD_SHARED_LIBPAW_TRUE"]=""
S["DO_BUILD_SHARED_COMMON_FALSE"]="#"
S["DO_BUILD_SHARED_COMMON_TRUE"]=""
S["with_bigdft"]=""
S["sd_bigdft_libs"]=""
S["sd_bigdft_ldflags"]=""
S["sd_bigdft_fcflags"]=""
S["sd_bigdft_cppflags"]=""
S["sd_bigdft_ok"]="unknown"
S["sd_bigdft_init"]="def"
S["sd_bigdft_enable"]="no"
S["sd_bigdft_status"]="optional"
S["sd_bigdft_policy"]="warn"
S["sd_bigdft_enable_def"]="no"
S["sd_bigdft_options"]="optional warn"
S["BIGDFT_LIBS"]=""
S["BIGDFT_LDFLAGS"]=""
S["BIGDFT_FCFLAGS"]=""
S["BIGDFT_CPPFLAGS"]=""
S["with_libpaw"]=""
S["sd_libpaw_libs"]=""
S["sd_libpaw_ldflags"]=""
S["sd_libpaw_fcflags"]=""
S["sd_libpaw_cppflags"]=""
S["sd_libpaw_ok"]="unknown"
S["sd_libpaw_init"]="def"
S["sd_libpaw_enable"]="no"
S["sd_libpaw_status"]="optional"
S["sd_libpaw_policy"]="skip"
S["sd_libpaw_enable_def"]="no"
S["sd_libpaw_options"]="optional skip"
S["LIBPAW_LIBS"]=""
S["LIBPAW_LDFLAGS"]=""
S["LIBPAW_FCFLAGS"]=""
S["LIBPAW_CPPFLAGS"]=""
S["with_abinit_common"]=""
S["sd_abinit_common_libs"]=""
S["sd_abinit_common_ldflags"]=""
S["sd_abinit_common_fcflags"]=""
S["sd_abinit_common_cppflags"]=""
S["sd_abinit_common_ok"]="unknown"
S["sd_abinit_common_init"]="def"
S["sd_abinit_common_enable"]="no"
S["sd_abinit_common_status"]="optional"
S["sd_abinit_common_policy"]="skip"
S["sd_abinit_common_enable_def"]="no"
S["sd_abinit_common_options"]="optional skip"
S["ABINIT_COMMON_LIBS"]=""
S["ABINIT_COMMON_LDFLAGS"]=""
S["ABINIT_COMMON_FCFLAGS"]=""
S["ABINIT_COMMON_CPPFLAGS"]=""
S["GRAPHATOM_BIN"]=""
S["ATOMPAW_BIN"]=""
S["DO_BUILD_67_TRIQS_EXT_FALSE"]=""
S["DO_BUILD_67_TRIQS_EXT_TRUE"]="#"
S["DO_BUILD_01_LIBXC_EXT_FALSE"]="#"
S["DO_BUILD_01_LIBXC_EXT_TRUE"]=""
S["DO_BUILD_PSML_FALSE"]=""
S["DO_BUILD_PSML_TRUE"]="#"
S["with_fft_flavor"]=""
S["sd_fft_ok"]="yes"
S["sd_fft_init"]="def"
S["sd_fft_flavor"]="goedecker"
S["sd_fft_enable"]="yes"
S["sd_fft_choices"]=""
S["sd_fft_libs"]=""
S["sd_fft_ldflags"]=""
S["sd_fft_fcflags"]=""
S["sd_fft_cxxflags"]=""
S["sd_fft_cflags"]=""
S["sd_fft_cppflags"]=""
S["sd_linalg_has_scalapack"]="unknown"
S["sd_linalg_has_elpa"]="unknown"
S["with_linalg_flavor"]=""
S["sd_linalg_flavor"]="openblas"
S["sd_linalg_ok"]="no"
S["sd_linalg_init"]="def"
S["sd_linalg_enable"]="yes"
S["sd_linalg_choices"]=""
S["sd_linalg_libs"]="-lopenblas"
S["sd_linalg_ldflags"]=""
S["sd_linalg_fcflags"]=""
S["sd_linalg_cxxflags"]=""
S["sd_linalg_cflags"]=""
S["sd_linalg_cppflags"]=""
S["LINALG_LIBS"]=""
S["LINALG_LDFLAGS"]=""
S["LINALG_FCFLAGS"]=""
S["LINALG_CXXFLAGS"]=""
S["LINALG_CFLAGS"]=""
S["LINALG_CPPFLAGS"]=""
S["with_xmlf90"]=""
S["sd_xmlf90_libs"]=""
S["sd_xmlf90_ldflags"]=""
S["sd_xmlf90_fcflags"]=""
S["sd_xmlf90_cppflags"]=""
S["sd_xmlf90_ok"]="unknown"
S["sd_xmlf90_init"]="def"
S["sd_xmlf90_enable"]="no"
S["sd_xmlf90_status"]="optional"
S["sd_xmlf90_policy"]="warn"
S["sd_xmlf90_enable_def"]="no"
S["sd_xmlf90_options"]="optional warn"
S["XMLF90_LIBS"]=""
S["XMLF90_LDFLAGS"]=""
S["XMLF90_FCFLAGS"]=""
S["XMLF90_CPPFLAGS"]=""
S["with_wannier90"]=""
S["sd_wannier90_libs"]=""
S["sd_wannier90_ldflags"]=""
S["sd_wannier90_fcflags"]=""
S["sd_wannier90_cppflags"]=""
S["sd_wannier90_ok"]="unknown"
S["sd_wannier90_init"]="def"
S["sd_wannier90_enable"]="no"
S["sd_wannier90_status"]="optional"
S["sd_wannier90_policy"]="warn"
S["sd_wannier90_enable_def"]="no"
S["sd_wannier90_options"]="optional warn"
S["WANNIER90_LIBS"]=""
S["WANNIER90_LDFLAGS"]=""
S["WANNIER90_FCFLAGS"]=""
S["WANNIER90_CPPFLAGS"]=""
S["with_triqs"]=""
S["sd_triqs_libs"]=""
S["sd_triqs_ldflags"]=""
S["sd_triqs_fcflags"]=""
S["sd_triqs_cxxflags"]=""
S["sd_triqs_cflags"]=""
S["sd_triqs_cppflags"]=""
S["sd_triqs_ok"]="unknown"
S["sd_triqs_init"]="def"
S["sd_triqs_enable"]="no"
S["sd_triqs_status"]="optional"
S["sd_triqs_policy"]="fail"
S["sd_triqs_enable_def"]="no"
S["sd_triqs_options"]="optional fail"
S["TRIQS_LIBS"]=""
S["TRIQS_LDFLAGS"]=""
S["TRIQS_CXXFLAGS"]=""
S["TRIQS_CFLAGS"]=""
S["TRIQS_CPPFLAGS"]=""
S["with_pfft"]=""
S["sd_pfft_libs"]=""
S["sd_pfft_ldflags"]=""
S["sd_pfft_cflags"]=""
S["sd_pfft_cppflags"]=""
S["sd_pfft_ok"]="unknown"
S["sd_pfft_init"]="def"
S["sd_pfft_enable"]="no"
S["sd_pfft_status"]="optional"
S["sd_pfft_policy"]="skip"
S["sd_pfft_enable_def"]="no"
S["sd_pfft_options"]="optional skip"
S["PFFT_LIBS"]=""
S["PFFT_LDFLAGS"]=""
S["PFFT_CFLAGS"]=""
S["PFFT_CPPFLAGS"]=""
S["with_papi"]=""
S["sd_papi_libs"]=""
S["sd_papi_ldflags"]=""
S["sd_papi_sd_papi_fcflags"]=""
S["sd_papi_cflags"]=""
S["sd_papi_cppflags"]=""
S["sd_papi_ok"]="unknown"
S["sd_papi_init"]="def"
S["sd_papi_enable"]="no"
S["sd_papi_status"]="optional"
S["sd_papi_policy"]="fail"
S["sd_papi_enable_def"]="no"
S["sd_papi_options"]="optional fail"
S["PAPI_LIBS"]=""
S["PAPI_LDFLAGS"]=""
S["PAPI_CFLAGS"]=""
S["PAPI_CPPFLAGS"]=""
S["sd_netcdf_fortran_libs"]="-lnetcdff"
S["sd_netcdf_fortran_ldflags"]=""
S["sd_netcdf_fortran_fcflags"]=""
S["sd_netcdf_fortran_cflags"]=""
S["sd_netcdf_fortran_cppflags"]=""
S["sd_netcdf_fortran_ok"]="yes"
S["sd_netcdf_fortran_init"]="def"
S["sd_netcdf_fortran_enable"]="yes"
S["sd_netcdf_fortran_status"]="required"
S["sd_netcdf_fortran_policy"]="warn"
S["sd_netcdf_fortran_enable_def"]="yes"
S["sd_netcdf_fortran_options"]="required warn"
S["NETCDF_FORTRAN_LIBS"]=""
S["NETCDF_FORTRAN_LDFLAGS"]=""
S["NETCDF_FORTRAN_FCFLAGS"]=""
S["NETCDF_FORTRAN_CXXFLAGS"]=""
S["NETCDF_FORTRAN_CFLAGS"]=""
S["NETCDF_FORTRAN_CPPFLAGS"]=""
S["with_netcdf"]=""
S["sd_netcdf_libs"]="-lnetcdf"
S["sd_netcdf_ldflags"]=""
S["sd_netcdf_fcflags"]=""
S["sd_netcdf_cflags"]=""
S["sd_netcdf_cppflags"]=""
S["sd_netcdf_ok"]="yes"
S["sd_netcdf_init"]="def"
S["sd_netcdf_enable"]="yes"
S["sd_netcdf_status"]="required"
S["sd_netcdf_policy"]="warn"
S["sd_netcdf_enable_def"]="yes"
S["sd_netcdf_options"]="required warn"
S["NETCDF_LIBS"]=""
S["NETCDF_LDFLAGS"]=""
S["NETCDF_FCFLAGS"]=""
S["NETCDF_CXXFLAGS"]=""
S["NETCDF_CFLAGS"]=""
S["NETCDF_CPPFLAGS"]=""
S["with_libxc"]=""
S["sd_libxc_libs"]="-lxc"
S["sd_libxc_ldflags"]=""
S["sd_libxc_fcflags"]=""
S["sd_libxc_cflags"]=""
S["sd_libxc_cppflags"]=""
S["sd_libxc_ok"]="yes"
S["sd_libxc_init"]="def"
S["sd_libxc_enable"]="yes"
S["sd_libxc_status"]="required"
S["sd_libxc_policy"]="warn"
S["sd_libxc_enable_fc"]="no"
S["sd_libxc_enable_def"]="yes"
S["sd_libxc_options"]="required no-fortran warn"
S["LIBXC_LIBS"]=""
S["LIBXC_LDFLAGS"]=""
S["LIBXC_FCFLAGS"]=""
S["LIBXC_CFLAGS"]=""
S["LIBXC_CPPFLAGS"]=""
S["with_libpsml"]=""
S["sd_libpsml_libs"]=""
S["sd_libpsml_ldflags"]=""
S["sd_libpsml_fcflags"]=""
S["sd_libpsml_cppflags"]=""
S["sd_libpsml_ok"]="unknown"
S["sd_libpsml_init"]="def"
S["sd_libpsml_enable"]="no"
S["sd_libpsml_status"]="optional"
S["sd_libpsml_policy"]="warn"
S["sd_libpsml_enable_def"]="no"
S["sd_libpsml_options"]="optional warn"
S["LIBPSML_LIBS"]=""
S["LIBPSML_LDFLAGS"]=""
S["LIBPSML_FCFLAGS"]=""
S["LIBPSML_CPPFLAGS"]=""
S["with_levmar"]=""
S["sd_levmar_libs"]=""
S["sd_levmar_ldflags"]=""
S["sd_levmar_cflags"]=""
S["sd_levmar_cppflags"]=""
S["sd_levmar_ok"]="unknown"
S["sd_levmar_init"]="def"
S["sd_levmar_enable"]="no"
S["sd_levmar_status"]="optional"
S["sd_levmar_policy"]="fail"
S["sd_levmar_enable_def"]="no"
S["sd_levmar_options"]="optional fail"
S["LEVMAR_LIBS"]=""
S["LEVMAR_LDFLAGS"]=""
S["LEVMAR_CFLAGS"]=""
S["LEVMAR_CPPFLAGS"]=""
S["with_fftw3"]=""
S["sd_fftw3_libs"]=""
S["sd_fftw3_ldflags"]=""
S["sd_fftw3_fcflags"]=""
S["sd_fftw3_cflags"]=""
S["sd_fftw3_cppflags"]=""
S["sd_fftw3_ok"]="unknown"
S["sd_fftw3_init"]="def"
S["sd_fftw3_enable"]="no"
S["sd_fftw3_status"]="optional"
S["sd_fftw3_policy"]="skip"
S["sd_fftw3_enable_def"]="no"
S["sd_fftw3_options"]="optional skip"
S["FFTW3_LIBS"]=""
S["FFTW3_LDFLAGS"]=""
S["FFTW3_FCFLAGS"]=""
S["FFTW3_CFLAGS"]=""
S["FFTW3_CPPFLAGS"]=""
S["with_hdf5"]=""
S["sd_hdf5_libs"]=" -L/home/vtrinquet/local/lib -lhdf5_hl -lhdf5 -lz -ldl -lm "
S["sd_hdf5_ldflags"]=""
S["sd_hdf5_fcflags"]=""
S["sd_hdf5_cxxflags"]=""
S["sd_hdf5_cflags"]=""
S["sd_hdf5_cppflags"]=" "
S["sd_hdf5_h5fc"]=""
S["sd_hdf5_h5cc"]="h5pcc"
S["sd_hdf5_ok"]="yes"
S["sd_hdf5_init"]="def"
S["sd_hdf5_enable"]="yes"
S["sd_hdf5_status"]="required"
S["sd_hdf5_policy"]="warn"
S["sd_hdf5_enable_fc"]="no"
S["sd_hdf5_enable_def"]="yes"
S["sd_hdf5_options"]="required no-fortran warn"
S["HDF5_LIBS"]=""
S["HDF5_LDFLAGS"]=""
S["HDF5_FCFLAGS"]=""
S["HDF5_CXXFLAGS"]=""
S["HDF5_CFLAGS"]=""
S["HDF5_CPPFLAGS"]=""
S["H5CC"]=""
S["DO_BUILD_NVTX_FALSE"]=""
S["DO_BUILD_NVTX_TRUE"]="#"
S["DO_BUILD_46_MANAGE_CUDA_FALSE"]=""
S["DO_BUILD_46_MANAGE_CUDA_TRUE"]="#"
S["DO_BUILD_17_GPU_TOOLBOX_FALSE"]=""
S["DO_BUILD_17_GPU_TOOLBOX_TRUE"]="#"
S["fc_timing"]="standard"
S["DO_BUILD_CCLOCK_FALSE"]=""
S["DO_BUILD_CCLOCK_TRUE"]="#"
S["XML_LIBS"]=""
S["XML_CPPFLAGS"]=""
S["XML2_CONFIG"]=""
S["with_gnu_ld"]=""
S["enable_static"]=""
S["enable_shared"]=""
S["ARFLAGS"]="    rc"
S["RANLIB"]="ranlib"
S["AR"]="ar"
S["ABINIT_BINARY_PACKAGE"]="abinit-9.9.0_x86_64_linux_gnu11.3"
S["ABINIT_TARGET"]="x86_64_linux_gnu11.3"
S["fcflags_opt_98_main"]="-O2 -mtune=native -march=native"
S["fcflags_opt_95_drive"]="-O2 -mtune=native -march=native"
S["fcflags_opt_94_scfcv"]="-O2 -mtune=native -march=native"
S["fcflags_opt_80_tdep"]="-O2 -mtune=native -march=native"
S["fcflags_opt_80_rttddft"]="-O2 -mtune=native -march=native"
S["fcflags_opt_79_seqpar_mpi"]="-O2 -mtune=native -march=native"
S["fcflags_opt_78_eph"]="-O2 -mtune=native -march=native"
S["fcflags_opt_78_effpot"]="-O2 -mtune=native -march=native"
S["fcflags_opt_77_suscep"]="-O2 -mtune=native -march=native"
S["fcflags_opt_77_ddb"]="-O2 -mtune=native -march=native"
S["fcflags_opt_72_response"]="-O2 -mtune=native -march=native"
S["fcflags_opt_71_wannier"]="-O2 -mtune=native -march=native"
S["fcflags_opt_71_bse"]="-O2 -mtune=native -march=native"
S["fcflags_opt_70_gw"]="-O2 -mtune=native -march=native"
S["fcflags_opt_69_wfdesc"]="-O2 -mtune=native -march=native"
S["fcflags_opt_68_rsprc"]="-O2 -mtune=native -march=native"
S["fcflags_opt_68_recursion"]="-O2 -mtune=native -march=native"
S["fcflags_opt_68_lotf"]="-O2 -mtune=native -march=native"
S["fcflags_opt_68_dmft"]="-O2 -mtune=native -march=native"
S["fcflags_opt_67_triqs_ext"]="-O2 -mtune=native -march=native"
S["fcflags_opt_67_python_invocation_ext"]="-O2 -mtune=native -march=native"
S["fcflags_opt_67_common"]="-O2 -mtune=native -march=native"
S["fcflags_opt_66_wfs"]="-O2 -mtune=native -march=native"
S["fcflags_opt_66_vdwxc"]="-O2 -mtune=native -march=native"
S["fcflags_opt_66_nonlocal"]="-O2 -mtune=native -march=native"
S["fcflags_opt_65_paw"]="-O2 -mtune=native -march=native"
S["fcflags_opt_65_lotf_base"]="-O2 -mtune=native -march=native"
S["fcflags_opt_64_psp"]="-O2 -mtune=native -march=native"
S["fcflags_opt_62_wvl_wfs"]="-O2 -mtune=native -march=native"
S["fcflags_opt_62_poisson"]="-O2 -mtune=native -march=native"
S["fcflags_opt_62_iowfdenpot"]="-O2 -mtune=native -march=native"
S["fcflags_opt_62_ctqmc"]="-O2 -mtune=native -march=native"
S["fcflags_opt_62_cg_noabirule"]="-O2 -mtune=native -march=native"
S["fcflags_opt_61_occeig"]="-O2 -mtune=native -march=native"
S["fcflags_opt_57_iovars"]="-O2 -mtune=native -march=native"
S["fcflags_opt_57_iopsp_parser"]="-O2 -mtune=native -march=native"
S["fcflags_opt_56_xc"]="-O2 -mtune=native -march=native"
S["fcflags_opt_56_recipspace"]="-O2 -mtune=native -march=native"
S["fcflags_opt_56_mixing"]="-O2 -mtune=native -march=native"
S["fcflags_opt_56_io_mpi"]="-O2 -mtune=native -march=native"
S["fcflags_opt_55_abiutil"]="-O2 -mtune=native -march=native"
S["fcflags_opt_54_spacepar"]="-O2 -mtune=native -march=native"
S["fcflags_opt_53_ffts"]="-O2 -mtune=native -march=native"
S["fcflags_opt_52_fft_mpi_noabirule"]="-O2 -mtune=native -march=native"
S["fcflags_opt_51_manage_mpi"]="-O2 -mtune=native -march=native"
S["fcflags_opt_49_gw_toolbox_oop"]="-O2 -mtune=native -march=native"
S["fcflags_opt_48_diago"]="-O2 -mtune=native -march=native"
S["fcflags_opt_46_manage_cuda"]="-O2 -mtune=native -march=native"
S["fcflags_opt_45_xgTools"]="-O2 -mtune=native -march=native"
S["fcflags_opt_45_geomoptim"]="-O2 -mtune=native -march=native"
S["fcflags_opt_44_abitypes_defs"]="-O2 -mtune=native -march=native"
S["fcflags_opt_44_abitools"]="-O2 -mtune=native -march=native"
S["fcflags_opt_43_wvl_wrappers"]="-O2 -mtune=native -march=native"
S["fcflags_opt_43_ptgroups"]="-O0"
S["fcflags_opt_42_parser"]="-O2 -mtune=native -march=native"
S["fcflags_opt_42_nlstrain"]="-O2 -mtune=native -march=native"
S["fcflags_opt_41_geometry"]="-O2 -mtune=native -march=native"
S["fcflags_opt_39_libpaw"]="-O2 -mtune=native -march=native"
S["fcflags_opt_33_xc_lowlevel"]="-O2 -mtune=native -march=native"
S["fcflags_opt_32_util"]="-O2 -mtune=native -march=native"
S["fcflags_opt_29_kpoints"]="-O2 -mtune=native -march=native"
S["fcflags_opt_28_numeric_noabirule"]="-O2 -mtune=native -march=native"
S["fcflags_opt_27_toolbox_oop"]="-O2 -mtune=native -march=native"
S["fcflags_opt_21_hashfuncs"]="-O2 -mtune=native -march=native"
S["fcflags_opt_18_timing"]="-O2 -mtune=native -march=native"
S["fcflags_opt_17_yaml_out"]="-O2 -mtune=native -march=native"
S["fcflags_opt_17_libtetra_ext"]="-O2 -mtune=native -march=native"
S["fcflags_opt_17_gpu_toolbox"]="-O2 -mtune=native -march=native"
S["fcflags_opt_16_hideleave"]="-O2 -mtune=native -march=native"
S["fcflags_opt_14_hidewrite"]="-O2 -mtune=native -march=native"
S["fcflags_opt_12_hide_mpi"]="-O2 -mtune=native -march=native"
S["fcflags_opt_11_memory_mpi"]="-O2 -mtune=native -march=native"
S["fcflags_opt_10_defs"]="-O2 -mtune=native -march=native"
S["fcflags_opt_02_clib"]="-O2 -mtune=native -march=native"
S["fcflags_opt_xmlf90"]="-O2 -mtune=native -march=native"
S["fcflags_opt_wannier90"]="-O2 -mtune=native -march=native"
S["fcflags_opt_triqs"]="-O2 -mtune=native -march=native"
S["fcflags_opt_papi"]="-O2 -mtune=native -march=native"
S["fcflags_opt_netcdf_fortran"]="-O2 -mtune=native -march=native"
S["fcflags_opt_netcdf"]="-O2 -mtune=native -march=native"
S["fcflags_opt_linalg"]="-O2 -mtune=native -march=native"
S["fcflags_opt_libxml2"]="-O2 -mtune=native -march=native"
S["fcflags_opt_libxc"]="-O2 -mtune=native -march=native"
S["fcflags_opt_libpsml"]="-O2 -mtune=native -march=native"
S["fcflags_opt_levmar"]="-O2 -mtune=native -march=native"
S["fcflags_opt_hdf5"]="-O2 -mtune=native -march=native"
S["fcflags_opt_bigdft"]="-O2 -mtune=native -march=native"
S["fcflags_opt_default"]="-O2 -mtune=native -march=native"
S["abi_optim_flavor"]="standard"
S["DO_BUILD_32_CONTRACT_FALSE"]=""
S["DO_BUILD_32_CONTRACT_TRUE"]="#"
S["abi_debug_flavor"]="basic"
S["CPPFLAGS_HINTS_EXT"]="-P -std=c99"
S["TRUE_CPP"]="cpp"
S["fc_mod_fcflags"]=""
S["FCLIBS"]=" -L/home/vtrinquet/local/lib -L/usr/lib/gcc/x86_64-linux-gnu/11 -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-l"\
"inux-gnu/11/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/11/."\
"./../.. -lmpifort -lmpi -lgfortran -lm -lquadmath"
S["FCFLAGS_F90"]=""
S["fc_info_string"]="GNU Fortran (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0"
S["abi_fc_wrap"]="no"
S["abi_fc_version"]="11.3"
S["abi_fc_vendor"]="gnu"
S["abi_fpp_path"]=""
S["ac_ct_FC"]=""
S["FC"]="mpifort"
S["abi_fc_path"]="/home/vtrinquet/local/bin/mpifort"
S["cxx_info_string"]="g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0"
S["abi_cxx_version"]="11.3"
S["abi_cxx_vendor"]="gnu"
S["am__fastdepCXX_FALSE"]="#"
S["am__fastdepCXX_TRUE"]=""
S["CXXDEPMODE"]="depmode=gcc3"
S["ac_ct_CXX"]=""
S["CXXFLAGS"]="-g -O2 -mtune=native -march=native      "
S["CXX"]="mpic++"
S["abi_cxx_path"]="/home/vtrinquet/local/bin/mpic++"
S["cc_info_string"]="gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0"
S["abi_cc_version"]="11.3"
S["abi_cc_vendor"]="gnu"
S["CPP"]="mpicc -E"
S["abi_cpp_path"]=""
S["abi_cc_path"]="/home/vtrinquet/local/bin/mpicc"
S["abi_fbk_xmlf90_ok"]="disabled"
S["abi_fbk_wannier90_ok"]="disabled"
S["abi_fbk_triqs_ok"]="no"
S["abi_fbk_pfft_ok"]="no"
S["abi_fbk_papi_ok"]="no"
S["abi_fbk_netcdf_fortran_ok"]="disabled"
S["abi_fbk_netcdf_ok"]="disabled"
S["abi_fbk_mpi_ok"]="no"
S["abi_fbk_linalg_ok"]="disabled"
S["abi_fbk_libxml2_ok"]="no"
S["abi_libxml2_prefix"]=""
S["abi_libxml2_libs"]=""
S["abi_libxml2_ldflags"]=""
S["abi_libxml2_fcflags"]=""
S["abi_libxml2_cppflags"]=""
S["abi_libxml2_ok"]="unknown"
S["abi_libxml2_init"]="def"
S["abi_libxml2_enable"]="no"
S["LIBXML2_LIBS"]=""
S["LIBXML2_FCFLAGS"]=""
S["LIBXML2_CPPFLAGS"]=""
S["abi_fbk_libxc_ok"]="disabled"
S["abi_fbk_libpsml_ok"]="disabled"
S["abi_fbk_libpaw_ok"]="no"
S["abi_fbk_levmar_ok"]="no"
S["abi_fbk_hdf5_ok"]="disabled"
S["abi_fbk_gpu_ok"]="no"
S["abi_fbk_fftw3_ok"]="no"
S["abi_fbk_fft_ok"]="no"
S["abi_fbk_bigdft_ok"]="disabled"
S["abi_fbk_abinit_common_ok"]="no"
S["abi_gpu_libs"]=""
S["abi_gpu_incs"]=""
S["abi_gpu_flavor"]="none"
S["abi_gpu_ldflags"]=""
S["abi_gpu_fcflags"]=""
S["abi_gpu_nvtx_v3"]=""
S["am__fastdepCC_FALSE"]="#"
S["am__fastdepCC_TRUE"]=""
S["CCDEPMODE"]="depmode=gcc3"
S["am__nodep"]="_no"
S["AMDEPBACKSLASH"]="\\"
S["AMDEP_FALSE"]="#"
S["AMDEP_TRUE"]=""
S["am__include"]="include"
S["DEPDIR"]=".deps"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]="mpicc"
S["CPPFLAGS"]=""
S["LDFLAGS"]="       "
S["CFLAGS"]="-g -O2    "
S["CC"]="mpicc"
S["with_gpu"]=""
S["sd_gpu_libs"]=" "
S["sd_gpu_ldflags"]=""
S["sd_gpu_fcflags"]=""
S["sd_gpu_cxxflags"]=""
S["sd_gpu_cflags"]=""
S["sd_gpu_cppflags"]=""
S["sd_gpu_ok"]="no"
S["sd_gpu_init"]="def"
S["sd_gpu_enable"]="no"
S["sd_gpu_status"]="optional"
S["sd_gpu_policy"]="warn"
S["sd_gpu_enable_def"]="no"
S["sd_gpu_options"]="optional warn"
S["GPU_LIBS"]=""
S["GPU_LDFLAGS"]=""
S["GPU_FCFLAGS"]=""
S["GPU_CXXFLAGS"]=""
S["GPU_CFLAGS"]=""
S["GPU_CPPFLAGS"]=""
S["abi_mpi_libs"]=""
S["abi_mpi_incs"]=""
S["abi_mpi_level"]="2"
S["abi_mpi_ldflags"]=""
S["abi_mpi_fcflags"]=""
S["abi_mpi_cxxflags"]=""
S["abi_mpi_cflags"]=""
S["abi_mpi_cppflags"]=""
S["abi_mpi_flavor"]="none"
S["abi_mpi_enable"]="yes"
S["with_mpi"]=""
S["sd_mpi_libs"]=""
S["sd_mpi_ldflags"]=""
S["sd_mpi_fcflags"]=""
S["sd_mpi_cflags"]=""
S["sd_mpi_cppflags"]=""
S["sd_mpi_ok"]="yes"
S["sd_mpi_init"]="def"
S["sd_mpi_enable"]="yes"
S["sd_mpi_status"]="optional"
S["sd_mpi_policy"]="fail"
S["sd_mpi_enable_fc"]="yes"
S["sd_mpi_enable_cxx"]="yes"
S["sd_mpi_enable_def"]="auto"
S["sd_mpi_options"]="auto optional fail"
S["sd_mpi_fc"]="mpifort"
S["sd_mpi_cxx"]="mpic++"
S["sd_mpi_cc"]="mpicc"
S["MPI_LIBS"]=""
S["MPI_LDFLAGS"]=""
S["MPI_FCFLAGS"]=""
S["MPI_CXXFLAGS"]=""
S["MPI_CFLAGS"]=""
S["MPI_CPPFLAGS"]=""
S["abi_fbk_required"]=""
S["abi_fbk_prefix"]=""
S["abi_fbk_list"]=""
S["abi_fbk_init"]="def"
S["abi_fbk_enable"]="no"
S["abi_fbk_config"]=""
S["sd_sys_fcflags"]=""
S["abi_lt_version"]="020406"
S["abi_am_version"]="011605"
S["abi_ac_version"]="027100"
S["abi_m4_version"]="010418"
S["src_95_drive_fcflags"]="-I$(top_builddir)/src/95_drive -I$(top_srcdir)/src/95_drive"
S["src_94_scfcv_fcflags"]="-I$(top_builddir)/src/94_scfcv -I$(top_srcdir)/src/94_scfcv"
S["src_80_tdep_fcflags"]="-I$(top_builddir)/src/80_tdep -I$(top_srcdir)/src/80_tdep"
S["src_80_rttddft_fcflags"]="-I$(top_builddir)/src/80_rttddft -I$(top_srcdir)/src/80_rttddft"
S["src_79_seqpar_mpi_fcflags"]="-I$(top_builddir)/src/79_seqpar_mpi -I$(top_srcdir)/src/79_seqpar_mpi"
S["src_78_eph_fcflags"]="-I$(top_builddir)/src/78_eph -I$(top_srcdir)/src/78_eph"
S["src_78_effpot_fcflags"]="-I$(top_builddir)/src/78_effpot -I$(top_srcdir)/src/78_effpot"
S["src_77_suscep_fcflags"]="-I$(top_builddir)/src/77_suscep -I$(top_srcdir)/src/77_suscep"
S["src_77_ddb_fcflags"]="-I$(top_builddir)/src/77_ddb -I$(top_srcdir)/src/77_ddb"
S["src_72_response_fcflags"]="-I$(top_builddir)/src/72_response -I$(top_srcdir)/src/72_response"
S["src_71_wannier_fcflags"]="-I$(top_builddir)/src/71_wannier -I$(top_srcdir)/src/71_wannier"
S["src_71_bse_fcflags"]="-I$(top_builddir)/src/71_bse -I$(top_srcdir)/src/71_bse"
S["src_70_gw_fcflags"]="-I$(top_builddir)/src/70_gw -I$(top_srcdir)/src/70_gw"
S["src_69_wfdesc_fcflags"]="-I$(top_builddir)/src/69_wfdesc -I$(top_srcdir)/src/69_wfdesc"
S["src_68_rsprc_fcflags"]="-I$(top_builddir)/src/68_rsprc -I$(top_srcdir)/src/68_rsprc"
S["src_68_recursion_fcflags"]="-I$(top_builddir)/src/68_recursion -I$(top_srcdir)/src/68_recursion"
S["src_68_lotf_fcflags"]="-I$(top_builddir)/src/68_lotf -I$(top_srcdir)/src/68_lotf"
S["src_68_dmft_fcflags"]="-I$(top_builddir)/src/68_dmft -I$(top_srcdir)/src/68_dmft"
S["src_67_triqs_ext_fcflags"]="-I$(top_builddir)/src/67_triqs_ext -I$(top_srcdir)/src/67_triqs_ext"
S["src_67_python_invocation_ext_fcflags"]="-I$(top_builddir)/src/67_python_invocation_ext -I$(top_srcdir)/src/67_python_invocation_ext"
S["src_67_common_fcflags"]="-I$(top_builddir)/src/67_common -I$(top_srcdir)/src/67_common"
S["src_66_wfs_fcflags"]="-I$(top_builddir)/src/66_wfs -I$(top_srcdir)/src/66_wfs"
S["src_66_vdwxc_fcflags"]="-I$(top_builddir)/src/66_vdwxc -I$(top_srcdir)/src/66_vdwxc"
S["src_66_nonlocal_fcflags"]="-I$(top_builddir)/src/66_nonlocal -I$(top_srcdir)/src/66_nonlocal"
S["src_65_paw_fcflags"]="-I$(top_builddir)/src/65_paw -I$(top_srcdir)/src/65_paw"
S["src_65_lotf_base_fcflags"]="-I$(top_builddir)/src/65_lotf_base -I$(top_srcdir)/src/65_lotf_base"
S["src_64_psp_fcflags"]="-I$(top_builddir)/src/64_psp -I$(top_srcdir)/src/64_psp"
S["src_62_wvl_wfs_fcflags"]="-I$(top_builddir)/src/62_wvl_wfs -I$(top_srcdir)/src/62_wvl_wfs"
S["src_62_poisson_fcflags"]="-I$(top_builddir)/src/62_poisson -I$(top_srcdir)/src/62_poisson"
S["src_62_iowfdenpot_fcflags"]="-I$(top_builddir)/src/62_iowfdenpot -I$(top_srcdir)/src/62_iowfdenpot"
S["src_62_ctqmc_fcflags"]="-I$(top_builddir)/src/62_ctqmc -I$(top_srcdir)/src/62_ctqmc"
S["src_62_cg_noabirule_fcflags"]="-I$(top_builddir)/src/62_cg_noabirule -I$(top_srcdir)/src/62_cg_noabirule"
S["src_61_occeig_fcflags"]="-I$(top_builddir)/src/61_occeig -I$(top_srcdir)/src/61_occeig"
S["src_57_iovars_fcflags"]="-I$(top_builddir)/src/57_iovars -I$(top_srcdir)/src/57_iovars"
S["src_57_iopsp_parser_fcflags"]="-I$(top_builddir)/src/57_iopsp_parser -I$(top_srcdir)/src/57_iopsp_parser"
S["src_56_xc_fcflags"]="-I$(top_builddir)/src/56_xc -I$(top_srcdir)/src/56_xc"
S["src_56_recipspace_fcflags"]="-I$(top_builddir)/src/56_recipspace -I$(top_srcdir)/src/56_recipspace"
S["src_56_mixing_fcflags"]="-I$(top_builddir)/src/56_mixing -I$(top_srcdir)/src/56_mixing"
S["src_56_io_mpi_fcflags"]="-I$(top_builddir)/src/56_io_mpi -I$(top_srcdir)/src/56_io_mpi"
S["src_55_abiutil_fcflags"]="-I$(top_builddir)/src/55_abiutil -I$(top_srcdir)/src/55_abiutil"
S["src_54_spacepar_fcflags"]="-I$(top_builddir)/src/54_spacepar -I$(top_srcdir)/src/54_spacepar"
S["src_53_ffts_fcflags"]="-I$(top_builddir)/src/53_ffts -I$(top_srcdir)/src/53_ffts"
S["src_52_fft_mpi_noabirule_fcflags"]="-I$(top_builddir)/src/52_fft_mpi_noabirule -I$(top_srcdir)/src/52_fft_mpi_noabirule"
S["src_51_manage_mpi_fcflags"]="-I$(top_builddir)/src/51_manage_mpi -I$(top_srcdir)/src/51_manage_mpi"
S["src_49_gw_toolbox_oop_fcflags"]="-I$(top_builddir)/src/49_gw_toolbox_oop -I$(top_srcdir)/src/49_gw_toolbox_oop"
S["src_48_diago_fcflags"]="-I$(top_builddir)/src/48_diago -I$(top_srcdir)/src/48_diago"
S["src_46_manage_cuda_fcflags"]="-I$(top_builddir)/src/46_manage_cuda -I$(top_srcdir)/src/46_manage_cuda"
S["src_45_xgTools_fcflags"]="-I$(top_builddir)/src/45_xgTools -I$(top_srcdir)/src/45_xgTools"
S["src_45_geomoptim_fcflags"]="-I$(top_builddir)/src/45_geomoptim -I$(top_srcdir)/src/45_geomoptim"
S["src_44_abitypes_defs_fcflags"]="-I$(top_builddir)/src/44_abitypes_defs -I$(top_srcdir)/src/44_abitypes_defs"
S["src_44_abitools_fcflags"]="-I$(top_builddir)/src/44_abitools -I$(top_srcdir)/src/44_abitools"
S["src_43_wvl_wrappers_fcflags"]="-I$(top_builddir)/src/43_wvl_wrappers -I$(top_srcdir)/src/43_wvl_wrappers"
S["src_43_ptgroups_fcflags"]="-I$(top_builddir)/src/43_ptgroups -I$(top_srcdir)/src/43_ptgroups"
S["src_42_parser_fcflags"]="-I$(top_builddir)/src/42_parser -I$(top_srcdir)/src/42_parser"
S["src_42_nlstrain_fcflags"]="-I$(top_builddir)/src/42_nlstrain -I$(top_srcdir)/src/42_nlstrain"
S["src_41_geometry_fcflags"]="-I$(top_builddir)/src/41_geometry -I$(top_srcdir)/src/41_geometry"
S["src_39_libpaw_fcflags"]="-I$(top_builddir)/shared/libpaw/src -I$(top_srcdir)/shared/libpaw/src"
S["src_33_xc_lowlevel_fcflags"]="-I$(top_builddir)/shared/common/src/33_xc_lowlevel -I$(top_srcdir)/shared/common/src/33_xc_lowlevel"
S["src_32_util_fcflags"]="-I$(top_builddir)/shared/common/src/32_util -I$(top_srcdir)/shared/common/src/32_util"
S["src_29_kpoints_fcflags"]="-I$(top_builddir)/shared/common/src/29_kpoints -I$(top_srcdir)/shared/common/src/29_kpoints"
S["src_28_numeric_noabirule_fcflags"]="-I$(top_builddir)/shared/common/src/28_numeric_noabirule -I$(top_srcdir)/shared/common/src/28_numeric_noabirule"
S["src_27_toolbox_oop_fcflags"]="-I$(top_builddir)/shared/common/src/27_toolbox_oop -I$(top_srcdir)/shared/common/src/27_toolbox_oop"
S["src_21_hashfuncs_fcflags"]="-I$(top_builddir)/shared/common/src/21_hashfuncs -I$(top_srcdir)/shared/common/src/21_hashfuncs"
S["src_18_timing_fcflags"]="-I$(top_builddir)/shared/common/src/18_timing -I$(top_srcdir)/shared/common/src/18_timing"
S["src_17_yaml_out_fcflags"]="-I$(top_builddir)/shared/common/src/17_yaml_out -I$(top_srcdir)/shared/common/src/17_yaml_out"
S["src_17_libtetra_ext_fcflags"]="-I$(top_builddir)/shared/common/src/17_libtetra_ext -I$(top_srcdir)/shared/common/src/17_libtetra_ext"
S["src_17_gpu_toolbox_fcflags"]="-I$(top_builddir)/shared/common/src/17_gpu_toolbox -I$(top_srcdir)/shared/common/src/17_gpu_toolbox"
S["src_16_hideleave_fcflags"]="-I$(top_builddir)/shared/common/src/16_hideleave -I$(top_srcdir)/shared/common/src/16_hideleave"
S["src_14_hidewrite_fcflags"]="-I$(top_builddir)/shared/common/src/14_hidewrite -I$(top_srcdir)/shared/common/src/14_hidewrite"
S["src_12_hide_mpi_fcflags"]="-I$(top_builddir)/shared/common/src/12_hide_mpi -I$(top_srcdir)/shared/common/src/12_hide_mpi"
S["src_11_memory_mpi_fcflags"]="-I$(top_builddir)/shared/common/src/11_memory_mpi -I$(top_srcdir)/shared/common/src/11_memory_mpi"
S["src_10_defs_fcflags"]="-I$(top_builddir)/shared/common/src/10_defs -I$(top_srcdir)/shared/common/src/10_defs"
S["src_02_clib_fcflags"]="-I$(top_builddir)/shared/common/src/02_clib -I$(top_srcdir)/shared/common/src/02_clib"
S["src_libpaw_fcflags"]=" -I$(top_builddir)/shared/libpaw/incs -I$(top_srcdir)/shared/libpaw/incs -I$(top_builddir)/shared/libpaw/mods -I$(top_srcdir)/shared/libpaw/mods"
S["src_core_fcflags"]=" -I$(top_builddir)/src/incs -I$(top_srcdir)/src/incs -I$(top_builddir)/src/mods -I$(top_srcdir)/src/mods"
S["src_common_fcflags"]=" -I$(top_builddir)/shared/common/src/incs -I$(top_srcdir)/shared/common/src/incs -I$(top_builddir)/shared/common/src/mods -I$(top_srcdir)/shared/com"\
"mon/src/mods"
S["abinit_mandir"]="/usr/local/share/man"
S["abinit_libdir"]="/usr/local/lib"
S["abinit_incdir"]="/usr/local/include"
S["abinit_docdir"]="/usr/local/doc/abinit"
S["abinit_datdir"]="/usr/local/share/abinit"
S["abinit_chkdir"]="/usr/local/share/abinit/tests"
S["abinit_bindir"]="/usr/local/bin"
S["abinit_prefix"]="/usr/local"
S["XPPFLAGS_OPTIM"]=""
S["XPPFLAGS_EXTRA"]=""
S["XPPFLAGS_DEBUG"]=""
S["XPPFLAGS"]="   "
S["XPP"]=""
S["PYTHON_CPPFLAGS"]="-I/usr/include/python3.10 -I/usr/include/python3.10"
S["PYFLAGS"]=""
S["NVCC_LIBS"]=""
S["NVCC_LDFLAGS"]=""
S["NVCC_CPPFLAGS"]=""
S["NVCC_CFLAGS"]=""
S["NVCC"]=""
S["MODEXT"]="mod"
S["FPPFLAGS_OPTIM"]=""
S["FPPFLAGS_HINTS"]=""
S["FPPFLAGS_EXTRA"]=""
S["FPPFLAGS_DEBUG"]=""
S["FPPFLAGS"]="   "
S["FPP"]=""
S["FFT_FCFLAGS"]=""
S["FFT_CFLAGS"]=""
S["FC_LIBS_OPTIM"]=""
S["FC_LIBS_HINTS"]=""
S["FC_LIBS_EXTRA"]=""
S["FC_LIBS_DEBUG"]=""
S["FC_LIBS"]="     -L/home/vtrinquet/local/lib -L/usr/lib/gcc/x86_64-linux-gnu/11 -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_"\
"64-linux-gnu/11/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/"\
"11/../../.. -lmpifort -lmpi -lgfortran -lm -lquadmath"
S["FC_LDFLAGS_OPTIM"]=""
S["FC_LDFLAGS_HINTS"]=""
S["FC_LDFLAGS_EXTRA"]=""
S["FC_LDFLAGS_DEBUG"]=""
S["FC_LDFLAGS"]="   "
S["FCFLAGS_OPTIM"]="-O2 -mtune=native -march=native"
S["FCFLAGS_OPENMP"]=""
S["FCFLAGS_MODDIR"]="-J../mods"
S["FCFLAGS_HINTS"]="-ffree-line-length-none -fallow-argument-mismatch"
S["FCFLAGS_FREEFORM"]="-ffree-form"
S["FCFLAGS_FIXEDFORM"]="-ffixed-form"
S["FCFLAGS_EXTRA"]=""
S["FCFLAGS_DEBUG"]="-g"
S["FCFLAGS"]="-g -ffree-line-length-none -fallow-argument-mismatch      "
S["CXX_LIBS_OPTIM"]=""
S["CXX_LIBS_HINTS"]=""
S["CXX_LIBS_GPU"]=""
S["CXX_LIBS_EXTRA"]=""
S["CXX_LIBS_DEBUG"]=""
S["CXX_LIBS"]="   "
S["CXX_LDFLAGS_OPTIM"]=""
S["CXX_LDFLAGS_HINTS"]=""
S["CXX_LDFLAGS_GPU"]=""
S["CXX_LDFLAGS_EXTRA"]=""
S["CXX_LDFLAGS_DEBUG"]=""
S["CXX_LDFLAGS"]="   "
S["CXXFLAGS_OPTIM"]="-O2 -mtune=native -march=native"
S["CXXFLAGS_HINTS"]=""
S["CXXFLAGS_GPU"]=""
S["CXXFLAGS_EXTRA"]=""
S["CXXFLAGS_DEBUG"]="-g"
S["CPPFLAGS_OPTIM"]=""
S["CPPFLAGS_HINTS"]=""
S["CPPFLAGS_GPU"]=""
S["CPPFLAGS_EXTRA"]=""
S["CPPFLAGS_DEBUG"]=""
S["CFLAGS_OPTIM"]=""
S["CFLAGS_HINTS"]=""
S["CFLAGS_GPU"]=""
S["CFLAGS_EXTRA"]=""
S["CFLAGS_DEBUG"]=""
S["CC_LIBS_OPTIM"]=""
S["CC_LIBS_HINTS"]=""
S["CC_LIBS_GPU"]=""
S["CC_LIBS_EXTRA"]=""
S["CC_LIBS_DEBUG"]=""
S["CC_LIBS"]="   "
S["CC_LDFLAGS_OPTIM"]=""
S["CC_LDFLAGS_HINTS"]=""
S["CC_LDFLAGS_GPU"]=""
S["CC_LDFLAGS_EXTRA"]=""
S["CC_LDFLAGS_DEBUG"]=""
S["CC_LDFLAGS"]="   "
S["ARFLAGS_OPTIM"]=""
S["ARFLAGS_HINTS"]=""
S["ARFLAGS_EXTRA"]=""
S["ARFLAGS_DEBUG"]=""
S["ARFLAGS_CMD"]="rc"
S["ABI_CPPFLAGS"]="        "
S["abi_ac_distcheck"]=""
S["with_optim_flavor"]=""
S["with_mpi_level"]=""
S["with_libxml2"]=""
S["with_fc_version"]=""
S["with_fc_vendor"]=""
S["with_fallbacks"]=""
S["with_debug_flavor"]=""
S["with_config_file"]=""
S["abi_zdot_bugfix_enable"]="no"
S["enable_zdot_bugfix"]=""
S["abi_triqs_v2_0_enable"]="no"
S["enable_triqs_v2_0"]=""
S["abi_triqs_v1_4_enable"]="no"
S["enable_triqs_v1_4"]=""
S["abi_timer_enable"]="yes"
S["enable_timer"]=""
S["abi_stdin_enable"]="yes"
S["enable_stdin"]=""
S["abi_source_debug_enable"]="no"
S["enable_source_debug"]=""
S["abi_python_invocation_enable"]="no"
S["enable_python_invocation"]=""
S["abi_openmp_enable"]="no"
S["enable_openmp"]=""
S["abi_netcdf_default_enable"]="no"
S["enable_netcdf_default"]=""
S["abi_mpi_io_default_enable"]="no"
S["enable_mpi_io_default"]=""
S["abi_mpi_io_enable"]="yes"
S["enable_mpi_io"]=""
S["abi_mpi_inplace_enable"]="no"
S["enable_mpi_inplace"]=""
S["abi_memory_profiling_enable"]="no"
S["enable_memory_profiling"]=""
S["abi_lotf_enable"]="no"
S["enable_lotf"]=""
S["abi_libtetra_enable"]="yes"
S["enable_libtetra"]=""
S["abi_hints_enable"]="yes"
S["enable_hints"]=""
S["abi_gw_dpc_enable"]="no"
S["enable_gw_dpc"]=""
S["abi_fc_wrapper_enable"]="no"
S["enable_fc_wrapper"]=""
S["abi_exports_enable"]="no"
S["enable_exports"]=""
S["abi_crpa_optim_enable"]="no"
S["enable_crpa_optim"]=""
S["abi_cclock_enable"]="no"
S["enable_cclock"]=""
S["abi_bse_unpacked_enable"]="no"
S["enable_bse_unpacked"]=""
S["abi_avx_safe_mode_enable"]="no"
S["enable_avx_safe_mode"]=""
S["PYTHON_CONFIG"]="python3.10-config"
S["PYTHON"]="python3.10"
S["REALPATH"]="realpath"
S["EGREP"]="/usr/bin/grep -E"
S["TAR"]="tar"
S["PATCH"]="patch"
S["RM"]="/usr/bin/rm"
S["PERL"]="/usr/bin/perl"
S["MV"]="/usr/bin/mv"
S["BOURNE_SHELL"]="/usr/bin/sh"
S["GREP"]="/usr/bin/grep"
S["SED"]="/usr/bin/sed"
S["LN_S"]="ln -s"
S["abi_sys_spec"]="linux-x86_64"
S["abi_cpu_bits"]="64"
S["abi_cpu_64bits"]="yes"
S["abi_cpu_spec"]="unknown_unknown"
S["abi_cpu_model"]="unknown"
S["abi_cpu_vendor"]="unknown"
S["abi_cpu_platform"]="pc"
S["ABINIT_VERSION_BASE"]="9.9"
S["ABINIT_VERSION_BUILD"]="20221117"
S["ABINIT_VERSION_MICRO"]="0"
S["ABINIT_VERSION_MINOR"]="9"
S["ABINIT_VERSION_MAJOR"]="9"
S["ABINIT_VERSION"]="9.9.0"
S["abinit_builddir"]="/home/vtrinquet/Softwares_Packages/abinit/build_test"
S["abinit_srcdir"]="/home/vtrinquet/Softwares_Packages/abinit/build_test/.."
S["AM_BACKSLASH"]="\\"
S["AM_DEFAULT_VERBOSITY"]="1"
S["AM_DEFAULT_V"]="$(AM_DEFAULT_VERBOSITY)"
S["AM_V"]="$(V)"
S["CSCOPE"]="cscope"
S["ETAGS"]="etags"
S["CTAGS"]="ctags"
S["am__untar"]="tar -xf -"
S["am__tar"]="tar --format=ustar -chf - \"$$tardir\""
S["AMTAR"]="$${TAR-tar}"
S["am__leading_dot"]="."
S["SET_MAKE"]=""
S["AWK"]="mawk"
S["mkdir_p"]="$(MKDIR_P)"
S["MKDIR_P"]="/usr/bin/mkdir -p"
S["INSTALL_STRIP_PROGRAM"]="$(install_sh) -c -s"
S["STRIP"]=""
S["install_sh"]="${SHELL} /home/vtrinquet/Softwares_Packages/abinit/config/gnu/install-sh"
S["MAKEINFO"]="${SHELL} '/home/vtrinquet/Softwares_Packages/abinit/config/gnu/missing' makeinfo"
S["AUTOHEADER"]="${SHELL} '/home/vtrinquet/Softwares_Packages/abinit/config/gnu/missing' autoheader"
S["AUTOMAKE"]="${SHELL} '/home/vtrinquet/Softwares_Packages/abinit/config/gnu/missing' automake-1.16"
S["AUTOCONF"]="${SHELL} '/home/vtrinquet/Softwares_Packages/abinit/config/gnu/missing' autoconf"
S["ACLOCAL"]="${SHELL} '/home/vtrinquet/Softwares_Packages/abinit/config/gnu/missing' aclocal-1.16"
S["VERSION"]="9.9.0"
S["PACKAGE"]="abinit"
S["CYGPATH_W"]="echo"
S["am__isrc"]=" -I$(srcdir)"
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["target_os"]="linux-gnu"
S["target_vendor"]="pc"
S["target_cpu"]="x86_64"
S["target"]="x86_64-pc-linux-gnu"
S["host_os"]="linux-gnu"
S["host_vendor"]="pc"
S["host_cpu"]="x86_64"
S["host"]="x86_64-pc-linux-gnu"
S["build_os"]="linux-gnu"
S["build_vendor"]="pc"
S["build_cpu"]="x86_64"
S["build"]="x86_64-pc-linux-gnu"
S["target_alias"]=""
S["host_alias"]=""
S["build_alias"]=""
S["LIBS"]="-lxc -lnetcdff -lnetcdf  -L/home/vtrinquet/local/lib -lhdf5_hl -lhdf5 -lz -ldl -lm       -L/home/vtrinquet/local/lib -L/usr/lib/gcc/x86_64-linux-gnu"\
"/11 -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/."\
"./lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/11/../../.. -lmpifort -lmpi -lgfortran -lm -lquadmath "
S["ECHO_T"]=""
S["ECHO_N"]="-n"
S["ECHO_C"]=""
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["runstatedir"]="${localstatedir}/run"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/usr/local"
S["exec_prefix"]="${prefix}"
S["PACKAGE_URL"]=""
S["PACKAGE_BUGREPORT"]="https://bugs.launchpad.net/abinit/"
S["PACKAGE_STRING"]="ABINIT 9.9.0"
S["PACKAGE_VERSION"]="9.9.0"
S["PACKAGE_TARNAME"]="abinit"
S["PACKAGE_NAME"]="ABINIT"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/bash"
S["am__quote"]=""
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"ABINIT\""
D["PACKAGE_TARNAME"]=" \"abinit\""
D["PACKAGE_VERSION"]=" \"9.9.0\""
D["PACKAGE_STRING"]=" \"ABINIT 9.9.0\""
D["PACKAGE_BUGREPORT"]=" \"https://bugs.launchpad.net/abinit/\""
D["PACKAGE_URL"]=" \"\""
D["PACKAGE"]=" \"abinit\""
D["VERSION"]=" \"9.9.0\""
D["ABINIT_VERSION"]=" \"9.9.0\""
D["ABINIT_VERSION_MAJOR"]=" \"9\""
D["ABINIT_VERSION_MINOR"]=" \"9\""
D["ABINIT_VERSION_MICRO"]=" \"0\""
D["ABINIT_VERSION_BUILD"]=" \"20221117\""
D["ABINIT_VERSION_BASE"]=" \"9.9\""
D["HAVE_OS_LINUX"]=" 1"
D["CC_GNU"]=" 1"
D["CXX_GNU"]=" 1"
D["FC_GNU"]=" 1"
D["HAVE_FORTRAN2003"]=" 1"
P["FC_FUNC"]="(name,NAME)"
D["FC_FUNC"]=" name ## _"
P["FC_FUNC_"]="(name,NAME)"
D["FC_FUNC_"]=" name ## _"
D["ABINIT_TARGET"]=" \"x86_64_linux_gnu11.3\""
D["HAVE_STDIO_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["STDC_HEADERS"]=" 1"
D["HAVE_STDIO_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_TERMIOS_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_ERRNO_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_MATH_H"]=" 1"
D["HAVE_STDDEF_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_MCHECK_H"]=" 1"
D["HAVE_TIME_H"]=" 1"
D["HAVE_SYS_IOCTL_H"]=" 1"
D["HAVE_SYS_RESOURCE_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_SYS_TIME_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_MALLOC_H"]=" 1"
D["HAVE_ABORT"]=" 1"
D["HAVE_MALLINFO"]=" 1"
D["SIZEOF_CHAR"]=" 1"
D["SIZEOF_SHORT"]=" 2"
D["SIZEOF_INT"]=" 4"
D["SIZEOF_LONG"]=" 8"
D["SIZEOF_LONG_LONG"]=" 8"
D["SIZEOF_UNSIGNED_INT"]=" 4"
D["SIZEOF_UNSIGNED_LONG"]=" 8"
D["SIZEOF_UNSIGNED_LONG_LONG"]=" 8"
D["SIZEOF_FLOAT"]=" 4"
D["SIZEOF_DOUBLE"]=" 8"
D["SIZEOF_LONG_DOUBLE"]=" 16"
D["SIZEOF_SIZE_T"]=" 8"
D["SIZEOF_PTRDIFF_T"]=" 8"
D["HAVE_FC_ASYNC"]=" 1"
D["HAVE_FC_BACKTRACE"]=" 1"
D["HAVE_FC_COMMAND_ARGUMENT"]=" 1"
D["HAVE_FC_COMMAND_LINE"]=" 1"
D["HAVE_FC_SYSTEM"]=" 1"
D["HAVE_FC_CONTIGUOUS"]=" 1"
D["HAVE_FC_ALLOCATABLE_DTARRAYS"]=" 1"
D["HAVE_FC_IEEE_ARITHMETIC"]=" 1"
D["HAVE_FC_IEEE_EXCEPTIONS"]=" 1"
D["HAVE_FC_IOMSG"]=" 1"
D["HAVE_FC_ISO_C_BINDING"]=" 1"
D["HAVE_FC_EXIT"]=" 1"
D["HAVE_FC_FLUSH"]=" 1"
D["HAVE_FC_GAMMA"]=" 1"
D["HAVE_FC_SHIFTLR"]=" 1"
D["HAVE_FC_GETENV"]=" 1"
D["HAVE_FC_INT_QUAD"]=" 1"
D["HAVE_FC_ISO_FORTRAN_2008"]=" 1"
D["HAVE_FC_LONG_LINES"]=" 1"
D["HAVE_FC_MOVE_ALLOC"]=" 1"
D["HAVE_FC_PRIVATE"]=" 1"
D["HAVE_FC_PROTECTED"]=" 1"
D["HAVE_FC_STREAM_IO"]=" 1"
D["HAVE_FC_CPUTIME"]=" 1"
D["HAVE_FC_ON_THE_FLY_SHAPE"]=" 1"
D["HAVE_MPI"]=" 1"
D["HAVE_MPI_IO"]=" 1"
D["HAVE_MPI2"]=" 1"
D["HAVE_MPI_INTEGER16"]=" 1"
D["HAVE_MPI_TYPE_CREATE_STRUCT"]=" 1"
D["HAVE_MPI_IBCAST"]=" 1"
D["HAVE_MPI_IALLGATHER"]=" 1"
D["HAVE_MPI_IALLTOALL"]=" 1"
D["HAVE_MPI_IALLTOALLV"]=" 1"
D["HAVE_MPI_IGATHERV"]=" 1"
D["HAVE_MPI_IALLREDUCE"]=" 1"
D["HAVE_LINALG_AXPBY"]=" 1"
D["HAVE_LINALG_GEMM3M"]=" 1"
D["HAVE_TIMER_ABINIT"]=" 1"
D["HAVE_HDF5_H"]=" 1"
D["HAVE_HDF5"]=" 1"
D["HAVE_HDF5_MPI"]=" 1"
D["HAVE_NETCDF"]=" 1"
D["HAVE_NETCDF_MPI"]=" 1"
D["HAVE_NETCDF_FORTRAN"]=" 1"
D["HAVE_NETCDF_FORTRAN_MPI"]=" 1"
D["HAVE_LIBXC"]=" 1"
D["HAVE_LIBPAW_ABINIT"]=" 1"
D["HAVE_LIBTETRA_ABINIT"]=" 1"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`printf "%s\n" "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  printf "%s\n" "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
printf "%s\n" "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`printf "%s\n" "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`printf "%s\n" "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`printf "%s\n" "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
printf "%s\n" "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
printf "%s\n" "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      printf "%s\n" "/* $configure_input  */" >&1 \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
printf "%s\n" "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    printf "%s\n" "/* $configure_input  */" >&1 \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;

  :C)  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
printf "%s\n" "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  # TODO: see whether this extra hack can be removed once we start
  # requiring Autoconf 2.70 or later.
  case $CONFIG_FILES in #(
  *\'*) :
    eval set x "$CONFIG_FILES" ;; #(
  *) :
    set x $CONFIG_FILES ;; #(
  *) :
     ;;
esac
  shift
  # Used to flag and report bootstrapping failures.
  am_rc=0
  for am_mf
  do
    # Strip MF so we end up with the name of the file.
    am_mf=`printf "%s\n" "$am_mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile which includes
    # dependency-tracking related rules and includes.
    # Grep'ing the whole file directly is not great: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    sed -n 's,^am--depfiles:.*,X,p' "$am_mf" | grep X >/dev/null 2>&1 \
      || continue
    am_dirpart=`$as_dirname -- "$am_mf" ||
$as_expr X"$am_mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$am_mf" : 'X\(//\)[^/]' \| \
	 X"$am_mf" : 'X\(//\)$' \| \
	 X"$am_mf" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$am_mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    am_filepart=`$as_basename -- "$am_mf" ||
$as_expr X/"$am_mf" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$am_mf" : 'X\(//\)$' \| \
	 X"$am_mf" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$am_mf" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    { echo "$as_me:$LINENO: cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles" >&5
   (cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } || am_rc=$?
  done
  if test $am_rc -ne 0; then
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "Something went wrong bootstrapping makefile fragments
    for automatic dependency tracking.  If GNU make was not used, consider
    re-running the configure script with MAKE=\"gmake\" (or whatever is
    necessary).  You can also try re-running configure with the
    '--disable-dependency-tracking' option to at least be able to build
    the package (albeit without support for automatic dependency tracking).
See \`config.log' for more details" "$LINENO" 5; }
  fi
  { am_dirpart=; unset am_dirpart;}
  { am_filepart=; unset am_filepart;}
  { am_mf=; unset am_mf;}
  { am_rc=; unset am_rc;}
  rm -f conftest-deps.mk
}
 ;;
    "default":C) chmod +x fallbacks/build-abinit-fallbacks.sh ;;
    "dump-optim":C) ${PYTHON} ${abinit_srcdir}/config/scripts/make-optim-dumper ;;
    "long-lines":C) /bin/sh ${abinit_srcdir}/config/scripts/shrink-src-files ${abinit_srcdir} ${abinit_builddir} ;;
    "script-perms":C) chmod u+x config/wrappers/wrap-fc ;;
    "source-split":C) /bin/sh config/split/make-src-symlinks ;;

  esac
done # for ac_tag


as_fn_exit 0
