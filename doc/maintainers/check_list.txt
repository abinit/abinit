**************
* Check_list *
**************

A. All merges, when appropriate
-------------------------------
A.1 Update the year, use the script developers/maintainers/change_year.sh (read it first ...)
A.2 Update shared/common/src/14_hidewrite/m_specialmsg.F90, lines 207-208
A.3 Update KNOWN_PROBLEMS
A.4 Run the "On-demand only slaves"
A.5 Check manually that "make tests_in" works (on one of the slaves)
A.6 On abiref, under buildbot, possibly clean content of scripts/bbtools/LinkChecker_rm_false_errors.py, in "url_string_to_skip" [likely superceded by new procedure from JMB when ready]
A.7 Issue ./mksite.py build, then ./mksite.py validate [generate lots of errors, but can be ignored at present]
A.8 Issue pytest abimkdocs_tests/test_variables.py [generate lots of errors, can be ignored at present]
A.9 Run abilint (to avoid source files be updated by each separate developer)

B. For all merges of a development version
------------------------------------------
B.1 src/make abiauty  (OBSOLETE - new scripts would be needed)

C. For the final merge of a development version  
-----------------------------------------------
C.1 src/make abiauty  and perhaps at some point again abirules ...   (OBSOLETE)
C.2 Update all reference files (optional, but definitely for major version number changes - see dev*/main*/update_refs.sh).

D. For the first merge of a production version (possibly for the first release also)
------------------------------------------------------------------------------------
Prepare release notes ... [=add a new -first- section to doc/about/release-notes.md]
D.1 To ease comparison, checkout starting revision of corresponding development version (see Wiki planning)
    e.g. in a separate develop, issue git checkout <commitnumber>
D.2 Identify new tests : issue ls tests/*/Input/*abi > list.abi in the two dirs, and compare (wc, then diff)
D.3 Identify new input variables : diff of the src/44_abitypes_defs/m_dtset.F90 file,
   also src/77_ddb/m_anaddb_dataset.F90, src/78_effpot/m_multibinit_dataset.F90, 
        80_tdep/m_tdep_readwrite.F90 (and possibly chkvars or dtset_copy)
D.4 Identify new tutorial doc files.
D.5 From the developers : scan the merge requests
D.6 Identify lacking or incomplete documentation and testing !
D.7 Check and update doc/developers/contributors.txt file
D.8 Check and update doc/theory/acknowledgments.md and the list of references mentioned in 57_iovars/m_out_acknowl.F90 .
D.9 Contact the relevant people

Then also
D.9 Possibly update doc/installation.md
D.10 Update topics mirroring the most noticeable achievements.

E. For the first release of a production version
-----------------------------------------------
E.1 Collect the stats, complete doc/main*/statistics.txt (and doc/dev*/statistics.json ? Not present in v9)

F. For the first release and other merges of a production version
-----------------------------------------------
Prepare the release, which means (send a letter to JMB) :
F.1 Make available the files tar.gz and robodoc (from abiref*debug)
F.2 Also update release notes for most noticeable achievements.

*******************************************************************
[This file can be found at doc/maintainers/check_list.txt]
