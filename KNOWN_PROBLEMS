Known problems

This file contains the list of known problems
at the time a version of ABINIT is released.
Note that bugs discovered later than the
release are NOT described here...
NOTE that problems are presently (for about three years) most often reported on the issue manager of the internal ABINIT Gitlab .
Still, the list of platforms and corresponding failing tests is maintained in the present document.

The present revision ABINITv10.0.2 is for examination of release notes, improvement of documentation, fixing bugs, and also normal development. 

0. List of platforms
1. Batteries of tests
2. List of known problems

================================================================
0. Platforms

For ABINITv10.0.2, list closed on 2024 03 XX
after installation and successful tests for the standard set of platforms,
as mentioned on
https://bbportal.abinit.org/#/status
and
https://wiki.abinit.org/doku.php?id=bb:builder
Corresponding configuration files are to be found in doc/build/config-examples

Supported compilers : gfortran, intel fortran, NAG, nvhpc.
The following compilers are either obsolete, or considered too unstable/buggy for ABINIT :
IBM XLF, g95, pathscale, open64, PGI . This does not mean that ABINIT will not work with these,
but there is no check on the ABINIT testfarm that ABINIT runs correctly with these.
The compiler nvhpc has been specifically added for tests of GPUs.

Status, for the different versions of compilers that are supported (or might become soon).

GNU Fortran compiler (presently tested : v8.5, v9.2.0, v9.3, v9.5, v10.2, v12.2, v12.3, v13.2)
All are mostly OK
GNU 9.2 : v8#34 is disactivated
GNU 9.3 : bigdft#14 is disactivated
GNU 12.2 : tutoparal/timages#04 is disactivated
GNU 13.2 with OpenMP : several atdep tests are disactivated (08,24,25,27,30,31,34,36)
GNU 13.2 with OpenMP : several libxc tests are disactivated (34,35)
GNU 13.2 with OpenMP : several tutorespfn/tlw tests are disactivated (4,5,6,7)

Intel Ifort compiler (presently tested : 16.0, 18.0, 19.0, 19.1, 21.4-OneAPI)
Ifort 16.0 is mostly OK, except for test paral#30 (Paral KGB), tutoparal/tgswvl#1, v4#32,33,34, and gpu_omp#03 , that are disactivated.
Ifort 18.0 and 19.0 : the reading of WFK files using MPIIO is not correct, for test mpiio#62, that is disactivated.
Ifort 19.0 and 19.1 : remaining problem in DMFT, see test v6#45, disactivated.
Ifort 21.4 is mostly OK, except for one problem in DMFT, see test v6#45, like with Ifort 19.1.

NAG Compiler
NAG 7.1, mostly OK, except for test mpiio#28 ; v8#16,#23 ; v9#81-87 ; paral#32 ; tmulti5#1,#2,#3 6#1, l_6#1 and l_7#1; gw1#5  (get the list by filtering over nag_)

nvhpc compiler (presently tested : 23.1, 23.9)
nvhpc 23.1 : mostly OK, except tutorespfn/teph4isotc#1-7, and v7#83,85-89.
nvhpc 23.9 : mostly OK, but has the same problems than nvhpc 23.1, and also does not work with gpu#01-05, neither with unitary/tfftgw_02 or unitary/tfftgw_03


=============================================================
1. Batteries of tests

Compilation of Netcdf and corresponding testing were tried.
NetCDF is OK for production.

When NetCDF was OK, compilation of ETSFIO and corresponding testing were tried.
ETSF_IO is OK for production.

Compilation of BigDFT, and corresponding testing were tried.
Bigdft is OK for production.

Compilation of Wannier90, and corresponding testing were tried.
Wannier90 is OK for production.

Compilation of libXC, and corresponding testing were tried.
LibXC is OK for production.

Compilation of ATOMPAW and corresponding testing were tried.
ATOMPAW is OK for production.

Compilation of PSML, and corresponding testing were tried.
PSML is OK for production.

Use of MPIIO and corresponding testing were tried.
MPIIO is OK for production, although it does not work on all platforms, but this is not a ABINIT problem.

Use of OpenMP automatically has been tested, and is ready for production.

Use of Scalapack automatically was not tested, and should NOT be attempted by non-expert users with this version.
However, link to scalapack is tested.

Memory leaks are tested automatically.

Speed was not tested.

Memory was not tested.


===============================================
2. List of known problems

(This list of known problem should gradually become obsolete. The new problems should be registered as issues on the ABINIT gitlab)

All the problems are listed cumulatively.
Those specific to version 8.0 are found at the end of this file

The type of the problem is identified as follows :

NUMERICAL ERROR : the physical result is incorrect,
 but the job does not crash. Moreover,
 the use of the input variables is legitimate.
 This is a very dangerous type of problem.
 There are two subclasses :
 - INTERNALLY INCOHERENT
  (the bug can be seen because two sets of
   input variables should give the same results
   and do not)
 - INTRINSIC
  (the bug does not cause incoherency, it can
   only be seen when comparing results with
   those of another code or with experimental results)
 The latter one is the most dangerous, of course ...

CRASH : the code does not produce the result, because
 it stops unduly.

SLOWING DOWN : the physical result is correct,
 but the code does not go as fast as it should.
 For example, the reading of a restart file might
 not be correct, or the SCF convergence
 might not be as fast as it should.

OTHER : some information (not numerical results)
might be erroneous ...

In each class of problem, one can identify
MACHINE-DEPENDENT problems (on some platform, this
problem does not occur, not on others) as well as
GENERAL problems.

Some of the problems listed below
have been reported by user, but have not yet been
examined for confirmation, in which case they are
labelled "TO BE CONFIRMED".

=================================================

P2. (XG, 001223 + later)
OTHER  (TO BE DONE)
GENERAL
The memory needs are not yet evaluated correctly
for the spin-orbit case and non-collinear magnetism
case.

P8. (GMR, November 2000)
SLOWING DOWN
GENERAL
restartxf for optcell/=0 might have a bug,
despite Test_v1#80
Identified in March 2001 by GMR : only happens when
restarting from a different, non-zero, optcell.
Should be corrected, but documented, now.


P15. (XG, 010103)
OTHER
GENERAL
Should enforce coding rule related to length of file

P117. (Laurent Pizzagalli, 010622)
CRASH
Observed on PC AMD, atomic relaxation (ionmov==7),
no cell optimisation, stops in xfpack complaining
about ndim. See mail 010622.

P118. (XG, 010710)
OTHER
GENERAL (d/dk by finite differences)
Test_v3 #5 . Sensitivity to phase choice.

P121. (GMR, 010801)
NUMERICAL RESULT
MACHINE_DEPENDENT (Compaq ES40, Turing)
The use of fourdp , with fftalg 200 or 1xx
gives complex conjugate results. This was seen
in the process of merging the GW code with ABINIT.
To be examined in detail.

P204. (XG, 011020)
OTHER (TO BE DONE)
MACHINE_DEPENDENT
Test_v3#14 : the output file is machine-dependent,
because the spin-phase of spin-degenerate wavefunctions
has not been fixed...
Or, is there something more fundamental ??


P302. (XG, 020305; DDKlug, 020313)
NUMERICAL ERROR
MACHINE_DEPENDENT (IBM 44P; SGI)
RF GGA : Test_v3#8,16,18,60,61,62,66
Problem with Response Function GGA tests.
The accuracy of the RF GGA Test_v3#16
is very bad on these machines : the acoustic
modes have large frequencies...

P350. (XG030225)
OTHER
GENERAL
psp*cc.f the fifth derivative is not computed.

P404. (XG030103)
NUMERICAL ERROR
LIKELY GENERAL
fftalg 401 works, but gives a slightly
different answer than usual for Tfast#10.
To test this, replace the default value in indefo.f

P405. (XG030106)
CONVERGENCE PROBLEM
LIKELY GENERAL
Test_v3#15 : with very well non-SCF converged wavefunction (nnsclo=2),
the total energy at intermediate steps is lower than the
final energy !

P406. (XG030106)
CONVERGENCE PROBLEM
LIKELY GENERAL
Test_v3#85 : set iscf to 5 in the RF, one sees a very bad convergence...

P416. (XG030522)
CRASH
Seen on Intel/PC with PGI compiler, in parallel
Test_v1#75,80  do not work
Problem to read XFhistory part of a wavefunction file.

P41.9. (XG030719)
PORTABILITY PROBLEM
GENERAL
Test_v4#37 is not portable : the spin decomposition of the
spinor wavefunctions is not gauge invariant. This
test has been disabled.

P42.7. (DH030929)
OTHER
Should examine the d2sym3.f routine, giving extra
zeros in the output file. See mail
from DHamman, on 2003-9-29.

P44.2. (DHamann20040527)
NUMERICAL INACCURACY
For the treatment of pseudopotentials with pspcod=6 (FHI),
the non-linear XC core charge is not treated consistently
in psp6cc.f and in the rest of the code.
See Don's mail to the developers of 20040527
See also input variable optnlxccc .

P45.5. (XG050220)
OTHER : PARALLEL TESTING
Test_v4#90 (CASINO output) crash in parallel (test_paral on grumpy).

P45.6. (XG050225)
NUMERICAL PROBLEM (with ionmov=12)
Test_v4#97 has one strange output

P45.17 (B. Andriyevsky 050405)
Problem of normalisation of the epsilon'' from
the "conducti" code ?!
A factor of pi (3.1416) might be missing.
See his mail of 5 April 2005 to the forum.
See also other mails exchanged on the forum.

P45.18 (D Hamann 050510)
NUMERICAL ERROR
With finite-difference ddk calculation
See his mail of 10 May, 2005.
(Excerpt : ...

The problem is that 4.4.4 and 4.5.2 WILL run drf.in and produce incorrect
results, all related to the dataset 3 finite-differend ddk calculation.
The results are only somewhat incorrect, not obvious garbage. Here is a
small sample, Born charges from "2nd-order matrix" in the .out files:

Correct (from erf.out):
   1    1   1    4   -4.1367712586    0.0000000000
   1    1   2    4   -0.0863319602    0.0000000000
   1    1   3    4    0.0706059161    0.0000000000

Incorrect (from drf.out):
   1    1   1    4   -3.4782061716    0.0000000000
   1    1   2    4   -0.0832639192    0.0000000000
   1    1   3    4    0.0560776887    0.0000000000


Putting in some istwfk printing, I found that setting berryopt/=0 now forces
istwfk=1 for dataset 3.  The problem apparently is that dataset 2 has some
istwfk>1, and apparently dataset 3 is getting incorrect WFK's from dataset 2
and using them.  Why it doesn't re-converge them first isn't clear.

Setting istwfk=1 in dataset 2 (erf.in) fixes the problem and gets correct
results.  (My hack also had the effect of setting istwfk=1 in dataset 2 as
well as 3.)

Curiously, removing the dataset 2 calculation altogether and feeding the
kptopt1=1 WFK's from dataset 1 directly to the finite-difference ddk
calculation (nrf.in) also fixes the problem, despite the fact that dataset 1
has some istwfk>1.

Clearly something bad is going on in WFK readin, but only in certain cases.
I've never looked at this part of the code, and I'm afraid I can't divert
any more time now towards tracking this down.



P46.1. (XG050701)
PORTABILITY PROBLEM
Test tutorial Finite electric field
alas_relaxdion.in (the last one)
does not work on my PC : it stops before the end.


P50.16 (XG061215)
DOC
Many documentation files should be updated or removed ...
Although most of the files put on the Web (.html) are OK.


P51.22 (MGiantomassi060627)
The new value of rprimd is not stored in _WFK file .
So, restart cannot benefit from modifications of acell.
See his mail of June 27, 2006. See also P8.


P53.11 (XG070121)
Still have to get rid off old iscf value for tutorial and tutorespfn automatic
testing, as well as updating tutorial html files.
Later, get rid off old iscf value in other automatic tests.

P53.22 (XG070302)
PARALLELISM : EFFICIENCY
outkss.F90 actually works k point by k point, sequentially ...
In the k point and spin loop, one should write locally
vkb,vkbd, en and wfg , without communication, then
transmit them in a separate spin and k point loop.
The k point loop only starts at 1020 , the write start at line 1506.

P53.27 (XG070401, modified XG070601)
NUMERICAL ERROR
GW parallelism over bands
Using two or four procs does not give the same macroscopic
dielectric constant as with one proc., at the level of the fourth digit .
See also test paral N .


P54.1 (XG070407)
NUMERICAL ERROR
With jellium slab, forces differed between PC + PGI4.0 or IFC
See test v5#56
However, in atmdata.F90, the znucl 0 has been defined,
and everything is now the same between the two platforms.
Still, should investigate what is the correct answer ...

P54.7 (XG070601 - actually, much earlier than that, but not documented)
CRASH : finite electric field with atomic displacements
Test ffield_7 does not work on my PC, and has been disabled .
The corresponding section of the ffield tutorial has been commented ...


P54.18 (XG070825)
Other
The computation of born Effective charges and dielectric tensor
under finite electric field should not be activated
with rfuser , but by the usual rfelfd=2, used with berryopt=4 .
See Tv5#23 .
Also, content of the doc file (now doc/input_variables/README_EFIELD_BEC_DIEL)
should be mentioned in the description of the variable rfelfd=2 .

P54.19 (XG070830)
Other
The decomposition of the total energy is not printed out in the case of RF under
electric field. Cases v4#80 and v5#23


P55.22 (XG071109)
Numerical errors, finite electric field
for phonons
Test v4 # 80
Non variational and variational expressions give different numbers ...
See line 1215 of t80.out, compare with line 1342 and line 1344.
Also, lines 2944-2946 should not be printed, as well as
lines 2954-2956, 2964-2966, etc ...


P55.26 (XG071123)
Numerical error
Automatic test v5#24 (Electric field response with spin-orbit)
On PC + g95 , large numerical error   (tolerance has been set to a large value)


P55.34 (XG080301)
Numerical problems
Parallel over band, FFT and k points
Test R : there are significant differences
between tR0.out and tR4.out .
(no problem for physical results, e.g. the energy difference
during the convergence is less than 0.1mHa, but not much smaller).


P56.03 (XG080802)
PAW with lobpcg algorithm (and band/FFT parallelism), and istwf 0.
Test W0 : interestingly, it runs correctly in parallel...
The use of iprcel 45 for dataset 4 has been disabled.
 dielmt : 15 largest eigenvalues of the hermitian RPA dielectric matrix
  1-5  : NaN         NaN         NaN         NaN         NaN
  6-10 : NaN         NaN         NaN         NaN         NaN
  11-15: NaN         NaN         NaN         NaN         NaN


P56.08 (XG080828)
PAW with lobpcg algorithm (and band/FFT parallelism), and istwf 0.
Test W : numerical results for dataset 5, 6 and 7 are wrong, it seems...
They should be identical to test R and are not.
Also, test W is not portable.
It was disabled for v5.6.0


P56.17 (XG080913)
Wannier90 test procedure is not yet complete :
only the .out are tested.


P56.22 (XG081202)
# (Perhaps solved, should be checked)
# PAW + Spin-orbit is still problematic.
# In the non-spin-polarized case (Kramers degeneracy) nspden=1 with spin-orbit gives different
# results than nspden=4. Also, the forces are not correct.
# See test v5#17
Apparently solved ! (MT feb. 09)
Forces obtained with nspden=1 are 1.d-20 because of symmtries (nsym=6);
With nspden=4, they are 1.d-6, but nsym=1 (due to spinat value).
If better convergence is achieved with nspden=4, forces decrease.
If nsym=1 with nspden=1, forces become 1.d-6.
WARNING : XG090823, the portability of the computation of forces is still
very low.

P56.23 (XG081203)
The Etsf_io support of density files from PAW is not yet working.
Thes test etsf_io #10 has been disabled.

P57.06 (XG090110)
the bin_seq and bin_seqpar tar.gz files contain Makefiles that do not allow to perform the
seq tests. Only tests_speed ...

P57.08 (JZwanzig090112)
On Opteron+ifort10.1 : transferability problem with v3#97 and v4#68
(Interestingly, no problem with chum, that is also an Opteron+ifort10.1).


P59.01 (MG090604)
On fock(IBM PW5) + XLF9.1, GW tests were failing due to call to deep_copy_ch1d in module m_copy.F90
It seems that XLF doesn't handle correctly pointers to string arrays neither when the length is assumed
nor when it's explicitly passed as argument. For the time being, deep_copy_ch1d is declared as private procedure.


P59.03 (XG090713)
For Tv4#69 and Tv2#36 , the .cnf file has to use opt=-easy for chpit+intel11.0 .
Perhaps this will be corrected with a better version of intel 11 ?
Otherwise, should examine why chpit+intel11.0 is so sensitive for these tests, and set back opt=-medium


P59.06 (XG090719)
Original Tetsf_io#08 crashed with chpit+intel11.1 and test+gcc44.0 , while it works
on many other platforms. This happened at the time of the switch between abinis and abinit (with MPI).
It was observed that with ndtset 2 (instead of ndtset 4), no crash occur. This is the current status
of the test, but one should find the problem with ndtset 4.

P59.07 (XG090720)
On bigmac + g95, several problems :
- v3#83 hang
- all libxc fail
- v1#07
- v5#11

P59.09 (XG090827)
Although the Berry phase calculation for norm-conserving case is behaving properly
in parallel, the finite-electric field calculation is not entirely correct :
the eigenenergies differ in the sequential and parallel cases.
See test paral#L

P59.10 (XG090905)
Test v5#40 has low portability. Had to enforce -ridiculous in tests/v5/tests.cnf .
Identified a potential source of low portability : when eigenenergies are degenerate,
but the local DOS contribution is different for degenerate states, there is
a large arbitrariness of the result.
In ABINITv6.0.0, tried to average over the local DOS contributions of degenerate wavefunctions,
writing a new routine dos_degeneratewfs.F90 . Unfortunately, the portability was not improved ?!
See Tv5#40 .
(MG160823) dos_fractions_average_m has been removed to reduce memory requirements.

P59.11 (XG090907)
See mail of BBertrand
L'algorithme de Broyden pour déterminer un acell optimal ne converge pas
dans ce réseau rhombohedral

P59.13 (XG090909)
The input variables bmass and vmass should be merged.
Moreover, the doc is confusing : pointing both to bmass ...

P59.14 (XG090912)
vprtrb does not behave properly, see Tv6#02

P59.15 (MG090914)
GW test procedure is not yet complete :
only the .out are tested. Other external files (_GW, _SIG, _SGR) are not tested.
Similar problem in t532 in which the output and the reference _BXSF files should be compared.

P59.16 (SLeroux091015)
CRASH
With gfortran compiler,
if the first dataset has kptopt1 = 0 and the second dataset has kptopt2 = 1,
during the deallocation of variables before changing the dataset,
abinit crash during deallocation of the variable kg in the routine gstate.F90 (line 1434)
(see tests/v6/t06.in, the commented dataset, for an example of input leading to crash).
There's no problem with ifort compiler.

P59.17 (XG091024)
Not sure pawprtwf works correctly, see the normalisation of wavefunctions
in Tetsf_io#09 (file t09.log)

 norm =    1.2344680606460083
 norm =   0.97410639792764531
 norm =   0.98106849665753615
 norm =   0.97966490153644847
 norm =    1.0448355540211380
 norm =   0.98043908884436204

Close to one, but why bigger than one ?


P61.1 (MG100312)
Check on group closure in v4/t26 and v4/t27 fails if all possible
product of symmetries is considered (new version of chkgrp).
The rotational part belong to the input set of symmetries but
the magnetic part differs. To be investigated in more detail.
For the time being the check on the magnetic part has been removed.

P61.2 (XG100315)
The tests v6#72-76 have big problems of portability, see the enormous tolerances ...

P61.3 (MG100312)
The values of dtsets% printed at the end of the run are not consistent
with the values used during the different runs.
driver.F90 indeed passes a local dtset datatype to its children and
this local datatype is not copied to dtsets(:) before returning.
I've already changed driver.F90 but this modification will affect
several output files. Therefore it should be done by Xavier during the
final merge.

P62.1 (XG100624)
In test libxc#08 , the first values of ETOT differ from platform to platform, by a few part
per million, while the final result converges to the same value. However, in the mean time,
the potential residual differs by a few percent, for absolute values that are very large.
So, the tolerances have to be enormous, while the test is actually portable
at the level of the final result. It should not be very difficult to find
what's happening for the initialisation ... Well, one day or so ...

P63.1 (XG100829)
In test tutorespfn#ffield_6, the first value of ETOT differs in the MPI and serial versions
on testf. As they are reference platforms, I had to use opt=-ridiculous.
However, the test is actually portable
at the level of the final result. It should not be very difficult to find
what's happening for the initialisation. See also P62.1 .

P63.2 (XG100906)
make abirules
is problematic ... Problems should be solved for v6.4.0 in production ... !

P66.1 (XG110115)
On chum/pathscale, the test mpiio/Q4  fails

-P-0000  rwwf.F90:372:BUG
-P-0000   Reading option of rwwf. One should have npw=npw1
-P-0000  However, npw=169, and npw1=0.
-P-0000
-P-0000  leave_new : decision taken to exit ...

So, mpiio testing has been desactivated on chum/pathscale .

P66.2 (XG110205)
Several input variables are not documented or tested, see tests/abirules/Refs/t01.out

P66.3 (XG110206)
The tutorial PAW3 should be automatically tested,
especially now that AtomPAW is a plugin of ABINIT.
A new test directory has been created, to contain
the tutorials in which a plugin is used !

P66.4 (MG110312)
fftalg=412 produces wrong results when fourwf is called with option=2, istwfk=1, cplex=2.
Calling fourwf with fftalg=412 and option=3 (R-->G) causes a sigfault error.
For the time being, the corresponding automatic tests in fftprof have been disabled.

P66.5 (XG110401)
Enabling the GPU for littlebuda has a strange side effect, of making Tv6#66 crash with a segfault.
So, enable_gpu = no was set in build-example.conf

[bb_intel-gfortran4.5_littlebuda]
...
enable_gpu = no

P67.1 (XG110307)
The FFTW3 algorithm cannot be used with DMFT. The default
setting of fftalg=312 in case the FFTW3 library is present has been
disactivated in indefo.F90 when usedmft/=0 . Should be reactivated
when DMFT and FFTW3 are compatible ...

P67.2 (XG110309)
There is a lack of portability for the output of Tv5#07, between
the reference platform and the FFTW3 calculation.
T5#07 being related to self-consistent electron-positron calculation,
with iterative self-consistency control that is less flexible than the
usual one, it has not been possible to adjust the test such as to obtain a better
portability. However, the final results are OK.

P67.3 (XG110315)
There is a lack of portability of Tv5#15 .
The problem lies in the fact that when the density
becomes negative, due to Bragg oscillations, the xc kernel can be extremely large, and when
use for the prediction of the residual of the forces, the differences between machines
can be extremely large. In order to see this effect, put ecut 7 and npulayit 7 (its default value).

P67.4 (XG110331)
The test Tv5#76 gives wrong numerical answer on littlebuda_gcc45_gpu.
Likely due to numerical precision on the GPU card ?

P67.5 (XG110511)
Switching to optforces=2 makes Tparal#T4 crash.
Also leads to some small modifications, hard to understand,
 in Tparal #O4, #U4, AB4.

P68.1 (XG110528)
Tests nlo7-10 should be out of tutorespfn ...
 They test ird1den and ird1wf, but are not used in the tutorial !

P68.2 (XG110604)
mGGAs from libxc raise several problems ...
(1) Tran-Blaha is hard to make converge. See Tlibxc#11 and 12
(2) TPSS and VSxc from Van Voorhis and Scuseria lead to divergence
when the gradient is zero, while the kinetic energy density is not zero.

P610.3 (JMB111201)
Due to open64 compiler bug, the compilation of  "79_seqpar_mpi/lobpcgwf.F90" crashs
The optimization is disabled for the folder 'src/79_seqpar_mpi' :
   fcflags_opt_79_seqpar_mpi = -O0 -m64 -align64

P611.3 (XG111220)
Disabled Tv6#102, due to a problem when merged mverstra branch...

P613.1 (XG120423 - updated on 120526 - updated on 120702)
Switch from Bigdft 1.2 to Bigdft 1.6 : the latter does not compile on IBM6 (xlf12). Problem of xlf12 likely.
So, had to disable bigdft on this machine.

P615.1 (XG120513)
The test Tv5#98 (electron-phonon, prediction of the superconducting temperature) is particularly non-portable.
The absolute tolerance is about 4e+3 ...

P615.3 (XG120521)
The test v6#121 had to be transferred to Tseq#v6_121.
See P59.09 . This is linked to a different algorithm for SCF for the sequential and parallel version.
This is a misconception !
One should change this algorithm, and only use the one that is parallel ...
In particular, look at make_grad_berry.F90 routine. In one case, one uses the cg array,
and in the other case, one uses the cgq array.
Even when executed only in serial, the test is not very portable, with high tolerance. In particular,
the openMP results indicates likely an intrinsic problem.
The same is true for other tests seq#v6_XXX with XXX=121,122,123,124, and likely 125 and 126.
A large tolerance has been used for these tests.

P615.5 (MG121010)
[v67mbpt][t22]: crash on cronos when openmp is enabled.

P615.5 (MG121010)
fftalg 112 and ffalg 412 do not support ndat > 1 in fourwf.
This should be solved ASAP by rationalizing the interfaces of the different low-level
routines. BTW: this prevents me from testing the different FFT options in fftprof (see hack a  m_fftprof:1378)

P70.3 (MG121101)
The scripts parents.pl does not recognize correctly the children of the procedure.
This problem starts to be very annoying since big modules are now full of CHILDREN sections
that are completely useless.

P71.1 (XG130220)
The abirules checks #3 and 4 are not done anymore on the directory src/65_psp (see the modification of script tests/Scripts/warningchk.py).
This should be temporary : during the time of development of pspatm_pspio.F90.

P71.2 (XG130221)
Functionals ixc -165 and -166 are not portable on IMB6 XLF14, as of LibXC 2.0.1 .
There are not very often used by ABINIT practitioners, so that their testing has been disabled from Tlibxc#06 and 07.
This should be monitored regularly, however.
Also, the TB mGGA is badly portable, also on IBM6 XLF14. Tolerances have been set to very high values in Tlibxc#08.

P71.3 (JMB130406)
Problems with gcc4.8 (yquem_gcc48), Bigdft and Fox had to be unabled :

- problème de link lorsqu'on active bigdft :

problème de "multiple definition" entre
     src/11_memory_mpi/lib11_memory_mpi.a(m_profiling.o)
et
      lib/libabinit.a(m_profiling.o)

- "petit" problème avec FoX :-\

------------------------------------------------------------------------
Case_01
2
< .Version 7.3.1 of ABINIT
> .Version 6.15.2 of ABINIT
3
< .(MPI version, prepared for a x86_64_linux_gnu4.8 computer)
> .(MPI version, prepared for a x86_64_linux_gnu4.4 computer)
17
< .Starting date : Thu  4 Apr 2013.
> .Starting date : Thu  9 Aug 2012.
178
< 3s 2.00  r= 1.89/3p 2.00  r= 1.89/3d 0.00  r= 1.89/4f  NaN r= 1.89/
> 3s 2.00  r= 1.89/3p 2.00  r= 1.89/3d 0.00  r= 1.89/4f 0.00 r= 1.89/


P73.1 (XG130413)
Format of writing is not appropriate for large forces (well, irrealistic, but this should be treated nevertheless).
See tests/paral/Refs/tAJ4.out, line 636

P73.2 (SP130516)
CRASH.
The tests/tutorespfn/Input/trf2_1.in crashes when changing the k-point grid from
ngkpt   4  4  4
nshiftk   4
shiftk   0.0 0.0 0.5
         0.0 0.5 0.0
         0.5 0.0 0.0
         0.5 0.5 0.5
to:
ngkpt   6 6 6
nshiftk   1
shiftk   0.0 0.0 0.0
CRASH:
 inwffil.F90:405:ERROR
   The file trf2_1o_DS1_WFK cannot be used to start the
  present calculation. It was asked that the wavefunctions be accurate, but
  at least one of the k points could not be generated from a symmetrical one.
  dksqmax=    4.586052E-04


In v7.3.3, lots of segfaults !
See http://buildbot-od.abinit.org/builders/green_intel11/builds/34


P73.4 (MG130614)
 paral/t76 gets stuck on max2 if #MPI > 2.
 For the time being, this test is disabled on max2


P73.5 (XG130623)
Place 65_lotf_base and 68_lotf under control of abiauty

P77.1 (XG140527)
Test paral#27 MPI4 on vishnu had to be disabled, because erroneous echo at the end of the run.
Should be easy to fix, but no time at present.

P711.1 (XG141130)
Had to disable check-local . To be discussed with Yann.

P801.1 (XG160124)
The test v6#67 has been disabled for nag compiler on petrus, due to a segmentation fault.
This happened at the test of trunk/8.0.1-private/1228, after the merge of several branches for which,
each separately, the test was executing properly. The seg fault has been tracked in dataset 22, just after
having written the density GSR file, the code wanted wo exit fftdatar_write, to go back to the execution of outscfcv,
and the segfault happened there. I was unable to fix the problem.

P802.1 (XG160213)
During the cleaning operation, I tried to remove the line fftalg 401 in mpiio/Input/t25.in (also mpiio/Input/t42.in, paral/Input/t25.in
Although the test executed, this lead to a breakdown of the Analysis script when all tests were done.
TO be clarified.

P802.2 (XG160220)
The tolerance on test tutorial#fold2bloch_2 is VERY large. There is likely a problem of portability in fold2bloch.

P802.4 (XG160228)
In case nsppol=2, with non-zero non-default spinmagntarget, the Fermi energy for spin up and spin down are independent of each other.
Both should be printed.

P804.1 (XG160430)
On cronos, the only parallel tests that are working nightly (beyond the usual MPI on 1, 2, 4 and 10 procs) are the
tutoparal#tdfpt_03 and 04 with 24 procs. One should enable gspw, mbt and string ones ...

P804.1 (XG160501)
AIM utility is not maintained anymore, while in few cases, problems are seen. Might use
http://theory.cm.utexas.edu/henkelman/code/bader (and advice using it).

P808.1 (XG160612)
prt_cif.F90 routine calls spgdata.F90 with spgaxor=-1 and spgorig=-1 . In some cases, brvsb and intsp cannot be determined.
This should be fixed. Also one should make a more exhaustive testing of prtcif input variable !

P811.1 (XG160701)
Tests with DFT+DMFT with CT-QMC algorithm do not work yet on ubu_intel16_mpich.

P811.2 (XG160701)
Several tests for ubu_intel_13.1_openmpi do not work : paral#21,25,26,28,93,94 and mpiio#21,22,25,26,49,51
So, for the time being, keep coba2_intel13 .

P811.3 (XG160701)
With abiref_nag_6.1_openmpi, erratically, one test fail with a timeout (900 secs). Likely due to the execution with -j .
Still, this was not the case with petrus_nag. So, for the time being, keep the latter.

P871.1 (XG171106)
Tutorial positron#4 on bob with Openmp 2 threads, the tolwfr is likely not openmp-shared correcty, because the difference
with the reference for this quantity can be very large, while the difference for the total energy and other quantities
is very small.

P890.1 (XG180504)
Test v8#34 (Hybrid Monte-Carlo) from Serguei Prokhorenko gives randomly different results on nag@abiref.

P890.2 (XG180609)
Test v6_t52 (for electron-phonon).
The tolerance is extremely large. Why is this test lacking so much portability ? Why is this not important ?
At least this portability problem should be commented upon ?!

P811.1 (XG190619)
Test v8_t156 (for electron-phonon, become v9_t56) on Ubu Intel 17
The kptgw input variables, with default values  is echoed, while the reference does not include it. Should track why it is printed.

P811.2 (XG190930)
Test v8_t24 on Ubu Intel 17
Numerical results are wrong. But on all other machines, it is OK. Should clarify ...

P90.1 (XG200309)
Test tutoparal ucrpa_2 24 procs
The value computed for
12772
<      The bare interaction (no renormalization) =     16.0038 eV
>      The bare interaction (no renormalization) =     16.3156 eV
12773
<      The bare interaction (for a renorm. wfn ) =     22.5848 eV
>      The bare interaction (for a renorm. wfn ) =     23.0248 eV
has changed largely at the switch from 9.0.0 to 9.0.1 . Should be checked what is the correct value, (e.g. in sequential),
and debug the situation...

NOTE that problems are presently (since 2020) most often reported on the issue manager of Github .
