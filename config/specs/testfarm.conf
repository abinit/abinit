# -*- INI -*-
#
# Copyright (C) 2009-2025 ABINIT Group (Yann Pouillon)
#
# This file is part of the ABINIT software package. For license information,
# please see the COPYING file in the top-level directory of the ABINIT source
# distribution.
#

#
# Config file to generate build config files for the ABINIT test farm
#
# Note: The following statements are in the Python INI format, with
#       case-sensitivity activated.
#

#
# File format:
#
#   * each section is the name assigned to a Buildbot slave;
#   * the contents of each section are valid options of the build system
#     (see options.conf and dependencies.conf for details);
#
#
# Section format (in this precise order):
#
#   * compiler flags;
#   * non-parallel switches (enable_*) and simple flavors (debug, optim);
#   * OpenMP options;
#   * MPI options;
#   * GPU options;
#   * linear algebra;
#   * FFT;
#   * HDF5 and NetCDF;
#   * other I/O libraries (LibPSML, LibXML2, XMLF90);
#   * DFT libraries (LibXC, TRIQS, Wannier90);
#   * BigDFT configuration;
#   * profiling libraries and extra algorithms (Levmar, PAPI).
#
# Each subsection is separated from the others by a blank line.
#

# WARNING: modify the defaults with *extreme* care!
[DEFAULT]
with_libxc = yes
with_netcdf = yes

###########################################################
#      NIGHTLY BUILDERS
###########################################################

###########################################################
# ALPS ( Rocky 9.x )

[alps_gnu_14.2_cov]

FCFLAGS_EXTRA = --coverage -fallow-argument-mismatch -lcurl

with_mpi = ${MPI_HOME}
enable_mpi_io = yes

with_linalg_flavor = mkl
LINALG_CPPFLAGS = -I${MKLROOT}/include
LINALG_FCFLAGS = -I${MKLROOT}/include
LINALG_LIBS = -L${MKLROOT}/lib/intel64 -Wl,--start-group  -lmkl_gf_lp64 -lmkl_sequential -lmkl_core -Wl,--end-group

with_fft_flavor = dfti

BIGDFT_FCFLAGS = -I${FALLBACKS_HOME}_10.2/${FB}/bigdft/abinit-1.7.1.32/include
BIGDFT_LIBS = -L${FALLBACKS_HOME}_10.2/${FB}/bigdft/abinit-1.7.1.32/lib -lbigdft-1 -labinit -lpaw_bigdft -lyaml -lrt

with_hdf5 = ${FALLBACKS_HOME}_10.2/${FB}/hdf5/1.14.5
with_netcdf = ${FALLBACKS_HOME}_10.2/${FB}/netcdf4/4.9.2
with_netcdf_fortran = ${FALLBACKS_HOME}_10.2/${FB}/netcdf4_fortran/4.6.1
with_libxc = ${FALLBACKS_HOME}_10.2/${FB}/libxc/6.2.2

with_libpsml = ${FALLBACKS_HOME}_10.2/${FB}/libpsml/2.0.1
with_wannier90 = ${FALLBACKS_HOME}_10.2/${FB}/wannier90/2.0.1.1
with_xmlf90 = ${FALLBACKS_HOME}_10.2/${FB}/xmlf90/1.6.3

enable_gw_dpc = yes
enable_netcdf_default = yes

[alps_gnu_9.5_sdebug]

CFLAGS_EXTRA = -lcurl
FCFLAGS_EXTRA = -Wall -fbacktrace -lcurl
FC_LIBS = -lstdc++ -ldl

with_debug_flavor = enhanced
with_optim_flavor = none

enable_cclock = no
enable_fc_wrapper = no
enable_gw_dpc = no
enable_netcdf_default = no

enable_openmp = no

with_mpi = ${MPI_HOME}
enable_mpi_io = yes

with_linalg_flavor = openblas
LINALG_LIBS = -L/usr/local/scalapack/lib -lscalapack -L/usr/local/OpenBLAS-0.3.28/lib -lopenblas -lpthread

with_fft_flavor = fftw3
FFTW3_FCFLAGS = -I/usr/include
FFTW3_LIBS = -L/usr/lib64 -lfftw3 -lfftw3f

with_hdf5 = ${FALLBACKS_HOME}_10.0/${FB}/hdf5/1.14.4-2
with_netcdf = ${FALLBACKS_HOME}_10.0/${FB}/netcdf4/4.9.2
with_netcdf_fortran = ${FALLBACKS_HOME}_10.0/${FB}/netcdf4_fortran/4.6.1
with_libxc = ${FALLBACKS_HOME}_10.0/${FB}/libxc/6.2.2

#with_hdf5 = ${FALLBACKS_HOME}_FB_/${FB}/hdf5/1.14.4-2
#with_netcdf = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4/4.9.2
#with_netcdf_fortran = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4_fortran/4.6.1
#with_libxc = ${FALLBACKS_HOME}_FB_/${FB}/libxc/6.2.2

with_libpsml = no
with_libxml2 = no
with_xmlf90 = no

with_triqs = no
with_wannier90 = no

with_bigdft = no

with_levmar = no
with_papi = no

[alps_intel_2025_elpa]

#CC = ${which mpiicc} -cc=${which icx}
#CXX = ${which mpiicpx} -cc=${which icpx}
#FC = ${which mpiifort} -fc=${which ifx}

CC = /opt/intel/oneapi/2025.0/bin/mpiicc -cc=/opt/intel/oneapi/2025.0/bin/icx
CXX = /opt/intel/oneapi/2025.0/bin/mpiicpx -cc=/opt/intel/oneapi/2025.0/bin/icpx
FC = /opt/intel/oneapi/2025.0/bin/mpiifort -fc=/opt/intel/oneapi/2025.0/bin/ifx
FCFLAGS_EXTRA = -traceback -debug none -O2

with_mpi = ${I_MPI_ROOT}
enable_mpi_io = yes

with_linalg_flavor = mkl+elpa
LINALG_CPPFLAGS = -I${MKLROOT}/include -I${ELPA_INC_DIR}
LINALG_FCFLAGS = -I${MKLROOT}/include -I${ELPA_INC_DIR}  -I${ELPA_FC_INC}
LINALG_LIBS = -L${MKLROOT}/lib -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lm -ldl -lcurl -L${ELPA_LIB_DIR} -lelpa

with_fft_flavor = dfti
FFT_FCFLAGS = -I${MKLROOT}/include

with_libxc = ${FALLBACKS_HOME}/${FB}/libxc/6.2.2
with_hdf5 = ${FALLBACKS_HOME}/${FB}/hdf5/1.14.5
with_netcdf = ${FALLBACKS_HOME}/${FB}/netcdf4/4.9.2
with_netcdf_fortran = ${FALLBACKS_HOME}/${FB}/netcdf4_fortran/4.6.1

#with_libpsml = ${FALLBACKS_HOME}/${FB}/libpsml/2.0.1
#with_xmlf90 = ${FALLBACKS_HOME}/${FB}/xmlf90/1.6.3

#with_wannier90 = ${FALLBACKS_HOME}/${FB}/wannier90/2.0.1.1

enable_netcdf_default = no
enable_gw_dpc = yes

[alps_nag_7.2_serial]

FCFLAGS_EXTRA = -lcurl
CFLAGS = -lcurl

with_mpi = no
enable_mpi_io = no

with_linalg_flavor = netlib
LINALG_LIBS = -L/usr/local/lapack-3.10_nag7.2 -llapack -lrefblas -lpthread -lm

with_libxc = ${FALLBACKS_HOME}_10.0/${FB}/libxc/6.2.2
#with_libxml2 = yes
with_hdf5 = ${FALLBACKS_HOME}_10.0/${FB}/hdf5/1.14.4-2
with_netcdf = ${FALLBACKS_HOME}_10.0/${FB}/netcdf4/4.9.2
with_netcdf_fortran = ${FALLBACKS_HOME}_10.0/${FB}/netcdf4_fortran/4.6.1
enable_netcdf_default = no

[alps_nag_7.2_openmpi]

enable_mpi = no
with_mpi = ${MPI_HOME}
enable_mpi_io = yes
with_linalg_flavor = netlib
LINALG_LIBS = -L/usr/local/lapack-3.10_nag7.2 -llapack -lrefblas -lpthread -lm
with_libxc = ${FALLBACKS_HOME}_10.0/${FB}/libxc/6.2.2
with_libxml2 = yes
with_hdf5 = ${FALLBACKS_HOME}_10.0/${FB}/hdf5/1.14.4-2
with_netcdf = ${FALLBACKS_HOME}_10.0/${FB}/netcdf4/4.9.2
enable_netcdf_default = yes
with_netcdf_fortran = ${FALLBACKS_HOME}_10.0/${FB}/netcdf4_fortran/4.6.1
enable_gw_dpc = yes
FCFLAGS_EXTRA = -lcurl
CFLAGS = -lcurl

# END ALPS
###########################################################

###########################################################
# ATLAS ( Fedora 41 )

[atlas_gnu_14.2_openmp]

FCFLAGS_EXTRA = -fopenmp -I/usr/lib64/gfortran/modules
FC_LDFLAGS_EXTRA = -fopenmp

with_mpi = no
enable_mpi_io = no

with_linalg_flavor = atlas
LINALG_FCFLAGS = -I/usr/include/atlas
LINALG_LIBS = -L/usr/lib64/atlas -ltatlas -lsatlas

with_fft_flavor = fftw3
FFTW3_FCFLAGS = -I/usr/include
FFTW3_LIBS = -L/usr/lib64 -lfftw3 -lfftw3f

with_libxc = yes
with_hdf5 = yes
with_netcdf = yes
with_netcdf_fortran = yes

enable_netcdf_default = no
enable_openmp = yes

# END ATLAS
###########################################################

###########################################################
# BUDA2 ( CentOS 7.x )

# GPU CARDS : 2 x K40c & TITAN V
[buda2_gnu_8.5_cuda]

FC_LDFLAGS_EXTRA = -Wl,-z,muldefs
FC_LIBS = -lstdc++ -ldl
FCFLAGS_EXTRA = -fbacktrace

enable_gw_dpc = yes
enable_netcdf_default = no

with_mpi = ${MPIHOME}
enable_mpi_io = yes

with_gpu = $CUDA_ROOT
with_gpu_flavor = cuda-double
NVCC_CFLAGS = -O3 -gencode arch=compute_70,code=sm_70 -gencode arch=compute_35,code=sm_35 -Xptxas=-v --use_fast_math --compiler-options -O3,-fPIC -DHAVE_CONFIG_H

with_linalg_flavor = mkl+magma
LINALG_CPPFLAGS = -I${MAGMA_ROOT}/include -I${MKLROOT}/include
LINALG_FCFLAGS = -I${MAGMA_ROOT}/include -I${MKLROOT}/include
LINALG_LIBS = -L${MAGMA_ROOT}/lib -Wl,--start-group -lmagma -lcuda -Wl,--end-group -L${MKLROOT}/lib/intel64 -lmkl_gf_lp64 -lmkl_sequential -lmkl_core -lgomp -lpthread -lm

with_hdf5 = ${FALLBACKS_HOME}_FB_/${FB}/hdf5/1.10.8
with_netcdf = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4/4.9.0
with_netcdf_fortran = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4_fortran/4.6.0

with_libxc = ${FALLBACKS_HOME}_FB_/${FB}/libxc/6.0.0

# END BUDA2
###########################################################

###########################################################
# EOS ( Ubuntu )

[eos_gnu_13.2_serial]

CC = gcc
CXX = g++
FC = gfortran

FCFLAGS_EXTRA = -O2 -g -Wall -Wno-maybe-uninitialized -ffpe-trap=invalid,zero,overflow -fbacktrace -fcheck=all,no-pointer -fallow-argument-mismatch -lcurl

with_mpi = no
enable_mpi_io = no

with_linalg_flavor = mkl
LINALG_CPPFLAGS = -I${MKLROOT}/include
LINALG_FCFLAGS = -m64 -I${MKLROOT}/include
LINALG_LIBS = -m64 -L${MKLROOT}/lib/intel64 -Wl,--no-as-needed -lmkl_gf_lp64 -lmkl_sequential -lmkl_core -lpthread -lm -ldl -lcurl

with_fft_flavor = dfti
FFT_FCFLAGS = -I${MKLROOT}/include

with_libxc = ${FALLBACKS_HOME}/${FB}/libxc/6.2.2

with_hdf5 = ${FALLBACKS_HOME}/${FB}/hdf5/1.14.4-2

with_netcdf = ${FALLBACKS_HOME}/${FB}/netcdf4/4.9.2
with_netcdf_fortran = ${FALLBACKS_HOME}/${FB}/netcdf4_fortran/4.6.1

with_libpsml = ${FALLBACKS_HOME}/${FB}/libpsml/2.0.1
with_xmlf90 = ${FALLBACKS_HOME}/${FB}/xmlf90/1.6.3
with_wannier90 = ${FALLBACKS_HOME}/${FB}/wannier90/2.0.1.1

enable_netcdf_default = no
enable_gw_dpc = yes

[eos_gnu_13.2_mpich]

CPPFLAGS_EXTRA = -DHAVE_TEST_TIME_PARTITIONING
FCFLAGS_EXTRA = -O2 -g -Wall -Wno-maybe-uninitialized -ffpe-trap=invalid,zero,overflow -fbacktrace -fcheck=all,no-pointer -fallow-argument-mismatch -lcurl

with_mpi = ${MPI_HOME}
enable_mpi_io = yes

with_linalg_flavor = mkl
LINALG_CPPFLAGS = -I${MKLROOT}/include
LINALG_FCFLAGS = -m64 -I${MKLROOT}/include
LINALG_LIBS = -m64 -L${MKLROOT}/lib/intel64 -lmkl_scalapack_lp64 -Wl,--no-as-needed -lmkl_gf_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lm -ldl -lcurl

with_fft_flavor = dfti
FFT_FCFLAGS = -I${MKLROOT}/include

with_libxc = ${FALLBACKS_HOME}/${FB}/libxc/6.2.2
with_hdf5 = ${FALLBACKS_HOME}/${FB}/hdf5/1.14.4-2
with_netcdf = ${FALLBACKS_HOME}/${FB}/netcdf4/4.9.2
with_netcdf_fortran = ${FALLBACKS_HOME}/${FB}/netcdf4_fortran/4.6.1

with_libpsml = ${FALLBACKS_HOME}/${FB}/libpsml/2.0.1
with_xmlf90 = ${FALLBACKS_HOME}/${FB}/xmlf90/1.6.3
with_wannier90 = ${FALLBACKS_HOME}/${FB}/wannier90/2.0.1.1

enable_netcdf_default = no
enable_gw_dpc = yes

[eos_intel_2023_cmake]

FC = mpiifort
CC = mpiicx -cc=icx
CXX = mpiicpx

CPP = icpx -E
FC_LIBS = -lstdc++ -ldl
FCFLAGS_EXTRA = -traceback

enable_avx_safe_mode = no
enable_gw_dpc = yes
enable_python_invocation = yes
enable_netcdf_default = yes

with_mpi = yes
enable_mpi_io = yes

with_linalg_flavor = mkl+elpa
LINALG_CPPFLAGS = -I${MKLROOT}/include -I${ELPA_INC_DIR}
LINALG_FCFLAGS = -I${MKLROOT}/include -I${ELPA_INC_DIR}  -I${ELPA_FC_INC}
LINALG_LIBS = -L${MKLROOT}/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lm -ldl -L${ELPA_LIB_DIR} -lelpa
with_fft_flavor = dfti
FFT_FCFLAGS = -I${MKLROOT}/include

with_hdf5 = ${FALLBACKS_HOME}_9.8/${FB}/hdf5/1.12.2
with_netcdf = ${FALLBACKS_HOME}_9.8/${FB}/netcdf4/4.9.0
with_netcdf_fortran = ${FALLBACKS_HOME}_9.8/${FB}/netcdf4_fortran/4.6.0
with_libxc = ${FALLBACKS_HOME}_9.8/${FB}/libxc/6.0.0

[eos_nvhpc_23.9_elpa]

CC = mpicc
CXX = mpicxx
FC = mpifort
FC_LIBS = -lstdc++ -ldl
with_mpi = yes
enable_mpi_io = yes

enable_openmp = yes
enable_openmp_offload = yes
with_gpu = $CUDA_INSTALL_PATH
with_gpu_flavor = cuda-double
with_gpu_markers = yes
NVCC = ${CUDA_INSTALL_PATH}/bin/nvcc
GPU_ARCH=80
NVCC_CFLAGS = -O3 -arch=sm_${GPU_ARCH} -Xptxas=-v --use_fast_math --compiler-options -O3,-fPIC,-DHAVE_CONFIG_H
GPU_CFLAGS =   -I${CUDA_INSTALL_PATH}/include
GPU_CPPFLAGS = -I${CUDA_INSTALL_PATH}/include
GPU_CXXFLAGS = -I${CUDA_INSTALL_PATH}/include
GPU_FCFLAGS =  -I${CUDA_INSTALL_PATH}/include
GPU_LIBS =     -L${CUDA_INSTALL_PATH}/lib64 -lcublas -lcublasLt -lcufft -lcusolver -lcudart -lstdc++ -lhwloc

with_yakl=/usr/local/yakl-cuda_12.0-nvhpc_23.1
with_kokkos=/usr/local/kokkos-4.2.0_cuda-12.0_nvhpc-23.1

with_linalg_flavor = mkl+elpa
LINALG_CPPFLAGS = -I${MKLROOT}/include -I${ELPA_INC_DIR}
LINALG_FCFLAGS = -I${MKLROOT}/include -I${ELPA_INC_DIR}  -I${ELPA_FC_INC}
LINALG_LIBS = -L${MKLROOT}/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_pgi_thread -lmkl_core -lmkl_blacs_openmpi_lp64 -pgf90libs -mp -lpthread -lm -ldl -L${ELPA_LIB_DIR} -lelpa
FCFLAGS_EXTRA = -I${ELPA_FC_INC}
with_fft_flavor = dfti
FFT_FCFLAGS = -I${MKLROOT}/include

with_libxc = ${FALLBACKS_HOME}/${FB}/libxc/6.0.0
with_hdf5 = ${FALLBACKS_HOME}/${FB}/hdf5/1.10.8
with_netcdf = ${FALLBACKS_HOME}/${FB}/netcdf4/4.9.0
with_netcdf_fortran = ${FALLBACKS_HOME}/${FB}/netcdf4_fortran/4.6.0

#with_libxc = ${FALLBACKS_HOME}_9.8/${FB}/libxc/6.0.0
#with_hdf5 = ${FALLBACKS_HOME}_9.8/${FB}/hdf5/1.12.2
#with_netcdf = ${FALLBACKS_HOME}_9.8/${FB}/netcdf4/4.9.0
#with_netcdf_fortran = ${FALLBACKS_HOME}_9.8/${FB}/netcdf4_fortran/4.6.0

enable_netcdf_default = yes
enable_gw_dpc = yes
enable_avx_safe_mode = no

[eos_nvhpc_24.9_openmpi]

enable_avx_safe_mode = no
CC = mpicc
CXX = mpicxx
FC = mpifort

CFLAGS_EXTRA = -lcurl
FCFLAGS_EXTRA = -lcurl -traceback
#FCFLAGS_EXTRA = -lcurl -I${ELPA_FC_INC} -traceback

FC_LIBS = -lstdc++ -ldl
fcflags_opt_80_tdep = -O1

with_mpi = yes
enable_mpi_io = yes
with_gpu = $CUDA_INSTALL_PATH
with_gpu_flavor = cuda-double
GPU_CPPFLAGS = -I${CUDA_INSTALL_PATH}/include
GPU_CFLAGS = -I${CUDA_INSTALL_PATH}/include
GPU_CXXFLAGS = -I${CUDA_INSTALL_PATH}/include
GPU_FCFLAGS = -I${CUDA_INSTALL_PATH}/include
GPU_LIBS = -L${CUDA_INSTALL_PATH}/lib64 -lcublas -lcublasLt -lcufft -lcusolver -lcudart -lstdc++ -lhwloc
GPU_ARCH = 80
NVCC = ${CUDA_INSTALL_PATH}/bin/nvcc
NVCC_CFLAGS = -O3 -arch=sm_${GPU_ARCH} -Xptxas=-v --use_fast_math --compiler-options -O3,-fPIC,-DHAVE_CONFIG_H

with_linalg_flavor = mkl+elpa
LINALG_CPPFLAGS = -I${MKLROOT}/include
LINALG_FCFLAGS = -I${MKLROOT}/include
LINALG_LIBS = -L${MKLROOT}/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_pgi_thread -lmkl_core -lmkl_blacs_openmpi_lp64 -pgf90libs -mp -lpthread -lm -ldl

#with_linalg_flavor = mkl+elpa
#LINALG_CPPFLAGS = -I${MKLROOT}/include -I${ELPA_INC_DIR}
#LINALG_FCFLAGS = -I${MKLROOT}/include -I${ELPA_INC_DIR}  -I${ELPA_FC_INC}
#LINALG_LIBS = -L${MKLROOT}/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_pgi_thread -lmkl_core -lmkl_blacs_openmpi_lp64 -pgf90libs -mp -lpthread -lm -ldl -L${ELPA_LIB_DIR} -lelpa

with_fft_flavor = dfti
FFT_FCFLAGS = -I${MKLROOT}/include

with_libxc = ${FALLBACKS_HOME}/${FB}/libxc/6.2.2
#with_hdf5 = ${FALLBACKS_HOME}/${FB}/hdf5/1.14.4-2
#with_netcdf = ${FALLBACKS_HOME}/${FB}/netcdf4/4.9.2
#with_netcdf_fortran = ${FALLBACKS_HOME}/${FB}/netcdf4_fortran/4.6.1
#FIXME Use older fallbacks version as the recent one is problematic...
with_hdf5 = /usr/local/fallbacks_9.8/nvhpc/23.1/elpa/hdf5/1.10.8
with_netcdf = /usr/local/fallbacks_9.8/nvhpc/23.1/elpa/netcdf4/4.9.0
with_netcdf_fortran = /usr/local/fallbacks_9.8/nvhpc/23.1/elpa/netcdf4_fortran/4.6.0
enable_netcdf_default = yes

#with_yakl = /usr/local/yakl-cuda_12.0-nvhpc_23.1

enable_gw_dpc = yes
enable_openmp = yes
enable_openmp_offload = yes

# END EOS
###########################################################


###########################################################
# MINIMAC Sequoia (15.3 )

#
[minimac_gnu_13.2_homebrew]

# HomeBrew   +gcc13 +openmpi +openblas
# libxc 6.2.2
# openmpi 4.1.5
# OpenBLAS 0.3.21
# fftw3 3.3.10
# netcdf 4.9.2
# netcdf-fortran 4.6.1
# hdf5 1.1r42

# not activate
# atompaw 4.1.0.6
# wannier90 3.1.0

CFLAGS = -O2 -g
CXXFLAGS = -O2 -g
FCFLAGS = -O2 -g -ffree-line-length-none -fallow-argument-mismatch

enable_netcdf_default = no
enable_gw_dpc = no

with_mpi = /opt/homebrew
enable_mpi_io = yes

# OpenBLAS
with_linalg_flavor = openblas
LINALG_FCFLAGS = -I/opt/homebrew/opt/openblas/include
LINALG_LIBS = -L/opt/homebrew/opt/openblas/lib -lopenblas

with_fft_flavor = fftw3
FFTW3_CPPFLAGS = -I/opt/homebrew/include
FFTW3_FCFLAGS = -I/opt/homebrew/include
FFTW3_LIBS = -L/opt/homebrew/lib -lfftw3 -lfftw3f

with_hdf5 = /opt/homebrew
with_netcdf = /opt/homebrew
with_netcdf_fortran = /opt/homebrew
with_libxc = /opt/homebrew

#WANNIER90_CPPFLAGS = -I/opt/homebrew/include
#WANNIER90_FCFLAGS = -I/opt/homebrew/include
#WANNIER90_LIBS = -L/opt/homebrew/lib -lwannier

# END MINIMAC
###########################################################


##############################################
#  SCOPE ( ubuntu 18.04 LTS )

[scope_gnu_10.2_paral]

enable_gw_dpc = no
#enable_memory_profiling = yes
enable_netcdf_default = yes

with_mpi = ${MPI_HOME}
enable_mpi_io = yes

FCFLAGS_EXTRA = -fbacktrace

with_linalg_flavor = openblas
LINALG_LIBS = -L/usr/local/OpenBLAS-0.3.10_gcc10.2/lib -lopenblas -lpthread

with_fft_flavor = fftw3
FFTW3_CPPFLAGS = -I/usr/include
FFTW3_FCFLAGS = -I/usr/include
FFTW3_LIBS = -L/usr/lib/x86_64-linux-gnu -lfftw3 -lfftw3f

with_hdf5 = ${FALLBACKS_HOME}_FB_/${FB}/hdf5/1.10.8
with_netcdf = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4/4.9.0
with_netcdf_fortran = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4_fortran/4.6.0

with_libpsml = ${FALLBACKS_HOME}_FB_/${FB}/libpsml/1.1.12
with_xmlf90 = ${FALLBACKS_HOME}_FB_/${FB}/xmlf90/1.5.6

with_libxc = ${FALLBACKS_HOME}_FB_/${FB}/libxc/6.0.0
with_wannier90 = ${FALLBACKS_HOME}_FB_/${FB}/wannier90/2.0.1.1

BIGDFT_FCFLAGS = -I${FALLBACKS_HOME}_FB_/${FB}/bigdft/abinit-1.7.1.30/include
BIGDFT_LIBS = -L${FALLBACKS_HOME}_FB_/${FB}/bigdft/abinit-1.7.1.30/lib -lbigdft-1 -labinit -lpaw_bigdft -lyaml -lrt

[scope_gnu_10.2_s64]

enable_gw_dpc = yes
#enable_memory_profiling = yes
enable_netcdf_default = yes

FCFLAGS_EXTRA = -fbacktrace

with_mpi = ${MPI_HOME}
enable_mpi_io = yes

with_linalg_flavor = openblas
LINALG_LIBS = -L/usr/local/OpenBLAS-0.3.10_gcc10.2/lib -lopenblas -lpthread

with_fft_flavor = fftw3
FFTW3_CPPFLAGS = -I/usr/include
FFTW3_FCFLAGS = -I/usr/include
FFTW3_LIBS = -L/usr/lib/x86_64-linux-gnu -lfftw3 -lfftw3f

with_hdf5 = ${FALLBACKS_HOME}_FB_/${FB}/hdf5/1.10.8
with_netcdf = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4/4.9.0
with_netcdf_fortran = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4_fortran/4.6.0

with_libpsml = ${FALLBACKS_HOME}_FB_/${FB}/libpsml/1.1.12
with_xmlf90 = ${FALLBACKS_HOME}_FB_/${FB}/xmlf90/1.5.6

with_libxc = ${FALLBACKS_HOME}_FB_/${FB}/libxc/6.0.0
with_wannier90 = ${FALLBACKS_HOME}_FB_/${FB}/wannier90/2.0.1.1

# abipy
[scope_gnu_12.2_abipy]

enable_gw_dpc = yes
enable_memory_profiling = no
enable_netcdf_default = no

with_mpi = ${MPI_HOME}
enable_mpi_io = yes

FCFLAGS_EXTRA = -fbacktrace

with_linalg_flavor = openblas
LINALG_LIBS = -L/usr/local/OpenBLAS-0.3.21_gcc12.2/lib -lopenblas -lpthread

with_hdf5 = ${FALLBACKS_HOME}_FB_/${FB}/hdf5/1.10.8
with_netcdf = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4/4.9.0
with_netcdf_fortran = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4_fortran/4.6.0

with_libpsml = ${FALLBACKS_HOME}_FB_/${FB}/libpsml/1.1.12
with_xmlf90 = ${FALLBACKS_HOME}_FB_/${FB}/xmlf90/1.5.6

with_libxc = ${FALLBACKS_HOME}_FB_/${FB}/libxc/6.0.0
with_wannier90 = ${FALLBACKS_HOME}_FB_/${FB}/wannier90/2.0.1.1

# memory profiling
[scope_gnu_12.2_mpich]

enable_gw_dpc = yes
enable_memory_profiling = yes
enable_netcdf_default = no

with_mpi = ${MPI_HOME}
enable_mpi_io = yes

FCFLAGS_EXTRA = -fbacktrace

with_linalg_flavor = openblas
LINALG_LIBS = -L/usr/local/OpenBLAS-0.3.21_gcc12.2/lib -lopenblas -lpthread

with_hdf5 = ${FALLBACKS_HOME}_FB_/${FB}/hdf5/1.10.8
with_netcdf = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4/4.9.0
with_netcdf_fortran = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4_fortran/4.6.0

with_libpsml = ${FALLBACKS_HOME}_FB_/${FB}/libpsml/1.1.12
with_xmlf90 = ${FALLBACKS_HOME}_FB_/${FB}/xmlf90/1.5.6

with_libxc = ${FALLBACKS_HOME}_FB_/${FB}/libxc/6.0.0
with_wannier90 = ${FALLBACKS_HOME}_FB_/${FB}/wannier90/2.0.1.1


[scope_gnu_13.2_dep]

FCFLAGS = -O0 -g -ffree-line-length-none -ffree-form -fbacktrace
FC_LIBS = -lstdc++ -ldl

with_mpi = ${MPI_HOME}
enable_mpi_io = yes

with_linalg_flavor = openblas
LINALG_LIBS = -L/usr/local/OpenBLAS-0.3.25_gcc13.2/lib -lopenblas -lpthread

with_libxc = ${FALLBACKS_HOME}_FB_/${FB}/libxc/6.0.0
with_hdf5 = ${FALLBACKS_HOME}_FB_/${FB}/hdf5/1.12.2
with_netcdf = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4/4.9.0
with_netcdf_fortran = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4_fortran/4.6.0

with_libpsml = ${FALLBACKS_HOME}_FB_/${FB}/libpsml/1.1.12
with_wannier90 = ${FALLBACKS_HOME}_FB_/${FB}/wannier90/2.0.1.1
with_xmlf90 = ${FALLBACKS_HOME}_FB_/${FB}/xmlf90/1.5.6

enable_python_invocation = yes
enable_gw_dpc = yes
enable_netcdf_default = yes

# END SCOPE
##############################################

##############################################
#  UBU ( ubuntu 16.04 LTS )

#
[ubu_intel_16.0_openmp]

enable_gw_dpc = yes
enable_netcdf_default = no

enable_openmp = yes
FCFLAGS_EXTRA = -traceback

with_mpi = no
enable_mpi_io = no

with_linalg_flavor = mkl
LINALG_CPPFLAGS = -I${MKLROOT}/include
LINALG_FCFLAGS = -I${MKLROOT}/include
LINALG_LIBS = -L${MKLROOT}/lib/intel64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread -lm -ldl

with_fft_flavor = dfti
FFT_FCFLAGS = -I${MKLROOT}/include

with_hdf5 = ${FALLBACKS_HOME}_FB_/${FB}/hdf5/1.10.8
with_netcdf = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4/4.9.0
with_netcdf_fortran = ${FALLBACKS_HOME}_FB_/${FB}/netcdf4_fortran/4.6.0

#with_libpsml = ${FALLBACKS_HOME}_FB_/${FB}/libpsml/1.1.12
#with_xmlf90 = ${FALLBACKS_HOME}_FB_/${FB}/xmlf90/1.5.6

with_libxc = ${FALLBACKS_HOME}_FB_/${FB}/libxc/6.0.0

# END UBU
